"use strict";(self.webpackChunkmineflayer_guide=self.webpackChunkmineflayer_guide||[]).push([[1256],{6580:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var i=n(5893),a=n(1151);const s={},o="Attack Entities",r={id:"snippets/attack",title:"Attack Entities",description:"The basic method for attacking an entity is bot.attack(entity)",source:"@site/docs/snippets/attack.mdx",sourceDirName:"snippets",slug:"/snippets/attack",permalink:"/snippets/attack",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/snippets/attack.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using Armor",permalink:"/snippets/armor"},next:{title:"Breaking Blocks",permalink:"/snippets/block_break"}},c={},l=[{value:"Filtering",id:"filtering",level:2},{value:"Attack Zombie",id:"attack-zombie",level:2},{value:"Attack Zombie, Skeleton, Creeper",id:"attack-zombie-skeleton-creeper",level:2}];function d(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"attack-entities",children:"Attack Entities"}),"\n",(0,i.jsxs)(t.p,{children:["The basic method for attacking an entity is ",(0,i.jsx)(t.code,{children:"bot.attack(entity)"})]}),"\n",(0,i.jsx)(t.h2,{id:"filtering",children:"Filtering"}),"\n",(0,i.jsxs)(t.p,{children:['Using a filter helps you only attack mobs in a "Safe Distance" (',(0,i.jsx)(t.em,{children:"legit distance"}),") around the player, and by filtering by ",(0,i.jsx)(t.code,{children:"Name"})," helps by targeting specific entities. If you don't add a filter your bot may attempt to attack ",(0,i.jsx)(t.code,{children:"experience_orb"}),", ",(0,i.jsx)(t.code,{children:"dropped_item"}),", and other entities."]}),"\n",(0,i.jsxs)(t.p,{children:["You can filter multiple entities by using ",(0,i.jsx)(t.code,{children:"['zombie', 'creeper'].includes(entity.name) &&..."})," in place of ",(0,i.jsx)(t.code,{children:"entity.name === 'zombie'"})]}),"\n",(0,i.jsx)(t.h2,{id:"attack-zombie",children:"Attack Zombie"}),"\n",(0,i.jsx)(t.p,{children:"Attack nearby zombies within 4.5 blocks"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",metastring:"copy",children:"let target = bot.nearestEntity(entity => entity.name === 'zombie' && entity.position.distanceTo(bot.entity.position) < 4.5);\r\nif(!target) console.log('I cannot find a mob with this filter');\r\nbot.attack(target)\n"})}),"\n",(0,i.jsx)(t.h2,{id:"attack-zombie-skeleton-creeper",children:"Attack Zombie, Skeleton, Creeper"}),"\n",(0,i.jsx)(t.p,{children:"Attack nearby zombies, skeletons, and creepers within 4.5 blocks"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",metastring:"copy",children:"let target = bot.nearestEntity(entity => ['zombie', 'skeleton', 'creeper'].includes(entity.name) && entity.position.distanceTo(bot.entity.position) < 4.5);\r\nif(!target) console.log('I cannot find a mob with this filter');\r\nbot.attack(target)\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>o});var i=n(7294);const a={},s=i.createContext(a);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);