"use strict";(self.webpackChunkmineflayer_guide=self.webpackChunkmineflayer_guide||[]).push([[8410],{5783:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var i=t(5893),s=t(1151);const l={title:"Introduction",sidebar_position:0},o="Introduction",r={id:"mineflayer/intro",title:"Introduction",description:"Table of Contents  generated with DocToc",source:"@site/docs/mineflayer/intro.md",sourceDirName:"mineflayer",slug:"/mineflayer/intro",permalink:"/mineflayer-guide/snippets/mineflayer/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Introduction",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Mineflayer",permalink:"/mineflayer-guide/snippets/category/mineflayer"},next:{title:"API",permalink:"/mineflayer-guide/snippets/mineflayer/API"}},a={},c=[{value:"Enums",id:"enums",level:2},{value:"minecraft-data",id:"minecraft-data",level:3},{value:"mcdata.blocks",id:"mcdatablocks",level:3},{value:"mcdata.items",id:"mcdataitems",level:3},{value:"mcdata.materials",id:"mcdatamaterials",level:3},{value:"mcdata.recipes",id:"mcdatarecipes",level:3},{value:"mcdata.instruments",id:"mcdatainstruments",level:3},{value:"mcdata.biomes",id:"mcdatabiomes",level:3},{value:"mcdata.entities",id:"mcdataentities",level:3},{value:"Classes",id:"classes",level:2},{value:"vec3",id:"vec3",level:3},{value:"mineflayer.Location",id:"mineflayerlocation",level:3},{value:"Entity",id:"entity",level:3},{value:"Player Skin Data",id:"player-skin-data",level:4},{value:"Block",id:"block",level:3},{value:"Biome",id:"biome",level:3},{value:"Item",id:"item",level:3},{value:"windows.Window (base class)",id:"windowswindow-base-class",level:3},{value:"window.deposit(itemType, metadata, count, nbt)",id:"windowdeposititemtype-metadata-count-nbt",level:4},{value:"window.withdraw(itemType, metadata, count, nbt)",id:"windowwithdrawitemtype-metadata-count-nbt",level:4},{value:"window.close()",id:"windowclose",level:4},{value:"Recipe",id:"recipe",level:3},{value:"mineflayer.Container",id:"mineflayercontainer",level:3},{value:"mineflayer.Furnace",id:"mineflayerfurnace",level:3},{value:"furnace &quot;update&quot;",id:"furnace-update",level:4},{value:"furnace.takeInput()",id:"furnacetakeinput",level:4},{value:"furnace.takeFuel()",id:"furnacetakefuel",level:4},{value:"furnace.takeOutput()",id:"furnacetakeoutput",level:4},{value:"furnace.putInput(itemType, metadata, count)",id:"furnaceputinputitemtype-metadata-count",level:4},{value:"furnace.putFuel(itemType, metadata, count)",id:"furnaceputfuelitemtype-metadata-count",level:4},{value:"furnace.inputItem()",id:"furnaceinputitem",level:4},{value:"furnace.fuelItem()",id:"furnacefuelitem",level:4},{value:"furnace.outputItem()",id:"furnaceoutputitem",level:4},{value:"furnace.fuel",id:"furnacefuel",level:4},{value:"furnace.progress",id:"furnaceprogress",level:4},{value:"mineflayer.EnchantmentTable",id:"mineflayerenchantmenttable",level:3},{value:"enchantmentTable &quot;ready&quot;",id:"enchantmenttable-ready",level:4},{value:"enchantmentTable.targetItem()",id:"enchantmenttabletargetitem",level:4},{value:"enchantmentTable.xpseed",id:"enchantmenttablexpseed",level:4},{value:"enchantmentTable.enchantments",id:"enchantmenttableenchantments",level:4},{value:"enchantmentTable.enchant(choice)",id:"enchantmenttableenchantchoice",level:4},{value:"enchantmentTable.takeTargetItem()",id:"enchantmenttabletaketargetitem",level:4},{value:"enchantmentTable.putTargetItem(item)",id:"enchantmenttableputtargetitemitem",level:4},{value:"enchantmentTable.putLapis(item)",id:"enchantmenttableputlapisitem",level:4},{value:"mineflayer.anvil",id:"mineflayeranvil",level:3},{value:"anvil.combine(itemOne, itemTwo[, name])",id:"anvilcombineitemone-itemtwo-name",level:4},{value:"anvil.combine(item[, name])",id:"anvilcombineitem-name",level:4},{value:"villager &quot;ready&quot;",id:"villager-ready",level:4},{value:"villager.trades",id:"villagertrades",level:4},{value:"villager.trade(tradeIndex, [times])",id:"villagertradetradeindex-times",level:4},{value:"mineflayer.ScoreBoard",id:"mineflayerscoreboard",level:3},{value:"ScoreBoard.name",id:"scoreboardname",level:4},{value:"ScoreBoard.title",id:"scoreboardtitle",level:4},{value:"ScoreBoard.itemsMap",id:"scoreboarditemsmap",level:4},{value:"ScoreBoard.items",id:"scoreboarditems",level:4},{value:"mineflayer.Team",id:"mineflayerteam",level:3},{value:"Team.name",id:"teamname",level:4},{value:"Team.friendlyFire",id:"teamfriendlyfire",level:4},{value:"Team.nameTagVisibility",id:"teamnametagvisibility",level:4},{value:"Team.collisionRule",id:"teamcollisionrule",level:4},{value:"Team.color",id:"teamcolor",level:4},{value:"Team.prefix",id:"teamprefix",level:4},{value:"Team.suffix",id:"teamsuffix",level:4},{value:"Team.members",id:"teammembers",level:4},{value:"mineflayer.BossBar",id:"mineflayerbossbar",level:3},{value:"BossBar.title",id:"bossbartitle",level:4},{value:"BossBar.health",id:"bossbarhealth",level:4},{value:"BossBar.dividers",id:"bossbardividers",level:4},{value:"BossBar.entityUUID",id:"bossbarentityuuid",level:4},{value:"BossBar.shouldDarkenSky",id:"bossbarshoulddarkensky",level:4},{value:"BossBar.isDragonBar",id:"bossbarisdragonbar",level:4},{value:"BossBar.createFog",id:"bossbarcreatefog",level:4},{value:"BossBar.color",id:"bossbarcolor",level:4},{value:"mineflayer.Particle",id:"mineflayerparticle",level:3},{value:"Particle.id",id:"particleid",level:4},{value:"Particle.name",id:"particlename",level:4},{value:"Particle.position",id:"particleposition",level:4},{value:"Particle.offset",id:"particleoffset",level:4},{value:"Particle.longDistanceRender",id:"particlelongdistancerender",level:4},{value:"Particle.count",id:"particlecount",level:4},{value:"Particle.movementSpeed",id:"particlemovementspeed",level:4},{value:"Bot",id:"bot",level:2},{value:"mineflayer.createBot(options)",id:"mineflayercreatebotoptions",level:3},{value:"Properties",id:"properties",level:3},{value:"bot.registry",id:"botregistry",level:4},{value:"bot.world",id:"botworld",level:4},{value:"world &quot;blockUpdate&quot; (oldBlock, newBlock)",id:"world-blockupdate-oldblock-newblock",level:5},{value:"world &quot;blockUpdate:(x, y, z)&quot; (oldBlock, newBlock)",id:"world-blockupdatex-y-z-oldblock-newblock",level:5},{value:"bot.entity",id:"botentity",level:4},{value:"bot.entities",id:"botentities",level:4},{value:"bot.username",id:"botusername",level:4},{value:"bot.spawnPoint",id:"botspawnpoint",level:4},{value:"bot.heldItem",id:"bothelditem",level:4},{value:"bot.usingHeldItem",id:"botusinghelditem",level:4},{value:"bot.game.levelType",id:"botgameleveltype",level:4},{value:"bot.game.dimension",id:"botgamedimension",level:4},{value:"bot.game.difficulty",id:"botgamedifficulty",level:4},{value:"bot.game.gameMode",id:"botgamegamemode",level:4},{value:"bot.game.hardcore",id:"botgamehardcore",level:4},{value:"bot.game.maxPlayers",id:"botgamemaxplayers",level:4},{value:"bot.game.serverBrand",id:"botgameserverbrand",level:4},{value:"bot.game.minY",id:"botgameminy",level:4},{value:"bot.game.height",id:"botgameheight",level:4},{value:"bot.physicsEnabled",id:"botphysicsenabled",level:4},{value:"bot.player",id:"botplayer",level:4},{value:"bot.players",id:"botplayers",level:4},{value:"bot.tablist",id:"bottablist",level:4},{value:"bot.isRaining",id:"botisraining",level:4},{value:"bot.rainState",id:"botrainstate",level:4},{value:"bot.thunderState",id:"botthunderstate",level:4},{value:"bot.chatPatterns",id:"botchatpatterns",level:4},{value:"bot.settings.chat",id:"botsettingschat",level:4},{value:"bot.settings.colorsEnabled",id:"botsettingscolorsenabled",level:4},{value:"bot.settings.viewDistance",id:"botsettingsviewdistance",level:4},{value:"bot.settings.difficulty",id:"botsettingsdifficulty",level:4},{value:"bot.settings.skinParts",id:"botsettingsskinparts",level:4},{value:"bot.settings.skinParts.showCape - boolean",id:"botsettingsskinpartsshowcape---boolean",level:5},{value:"bot.settings.skinParts.showJacket - boolean",id:"botsettingsskinpartsshowjacket---boolean",level:5},{value:"bot.settings.skinParts.showLeftSleeve - boolean",id:"botsettingsskinpartsshowleftsleeve---boolean",level:5},{value:"bot.settings.skinParts.showRightSleeve - boolean",id:"botsettingsskinpartsshowrightsleeve---boolean",level:5},{value:"bot.settings.skinParts.showLeftPants - boolean",id:"botsettingsskinpartsshowleftpants---boolean",level:5},{value:"bot.settings.skinParts.showRightPants - boolean",id:"botsettingsskinpartsshowrightpants---boolean",level:5},{value:"bot.settings.skinParts.showHat - boolean",id:"botsettingsskinpartsshowhat---boolean",level:5},{value:"bot.settings.enableTextFiltering - boolean",id:"botsettingsenabletextfiltering---boolean",level:4},{value:"bot.settings.enableServerListing - boolean",id:"botsettingsenableserverlisting---boolean",level:4},{value:"bot.experience.level",id:"botexperiencelevel",level:4},{value:"bot.experience.points",id:"botexperiencepoints",level:4},{value:"bot.experience.progress",id:"botexperienceprogress",level:4},{value:"bot.health",id:"bothealth",level:4},{value:"bot.food",id:"botfood",level:4},{value:"bot.foodSaturation",id:"botfoodsaturation",level:4},{value:"bot.oxygenLevel",id:"botoxygenlevel",level:4},{value:"bot.physics",id:"botphysics",level:4},{value:"bot.fireworkRocketDuration",id:"botfireworkrocketduration",level:4},{value:"bot.simpleClick.leftMouse (slot)",id:"botsimpleclickleftmouse-slot",level:4},{value:"bot.simpleClick.rightMouse (slot)",id:"botsimpleclickrightmouse-slot",level:4},{value:"bot.time.doDaylightCycle",id:"bottimedodaylightcycle",level:4},{value:"bot.time.bigTime",id:"bottimebigtime",level:4},{value:"bot.time.time",id:"bottimetime",level:4},{value:"bot.time.timeOfDay",id:"bottimetimeofday",level:4},{value:"bot.time.day",id:"bottimeday",level:4},{value:"bot.time.isDay",id:"bottimeisday",level:4},{value:"bot.time.moonPhase",id:"bottimemoonphase",level:4},{value:"bot.time.bigAge",id:"bottimebigage",level:4},{value:"bot.time.age",id:"bottimeage",level:4},{value:"bot.quickBarSlot",id:"botquickbarslot",level:4},{value:"bot.inventory",id:"botinventory",level:4},{value:"bot.targetDigBlock",id:"bottargetdigblock",level:4},{value:"bot.isSleeping",id:"botissleeping",level:4},{value:"bot.scoreboards",id:"botscoreboards",level:4},{value:"bot.scoreboard",id:"botscoreboard",level:4},{value:"bot.teams",id:"botteams",level:4},{value:"bot.teamMap",id:"botteammap",level:4},{value:"bot.controlState",id:"botcontrolstate",level:4},{value:"Events",id:"events",level:3},{value:"&quot;chat&quot; (username, message, translate, jsonMsg, matches)",id:"chat-username-message-translate-jsonmsg-matches",level:4},{value:"&quot;whisper&quot; (username, message, translate, jsonMsg, matches)",id:"whisper-username-message-translate-jsonmsg-matches",level:4},{value:"&quot;actionBar&quot; (jsonMsg, verified)",id:"actionbar-jsonmsg-verified",level:4},{value:"&quot;message&quot; (jsonMsg, position, sender, verified)",id:"message-jsonmsg-position-sender-verified",level:4},{value:"&quot;messagestr&quot; (message, messagePosition, jsonMsg, sender, verified)",id:"messagestr-message-messageposition-jsonmsg-sender-verified",level:4},{value:"&quot;inject_allowed&quot;",id:"inject_allowed",level:4},{value:"&quot;login&quot;",id:"login",level:4},{value:"&quot;spawn&quot;",id:"spawn",level:4},{value:"&quot;respawn&quot;",id:"respawn",level:4},{value:"&quot;game&quot;",id:"game",level:4},{value:"&quot;resourcePack&quot; (url, hash)",id:"resourcepack-url-hash",level:4},{value:"&quot;title&quot;",id:"title",level:4},{value:"&quot;rain&quot;",id:"rain",level:4},{value:"&quot;weatherUpdate&quot;",id:"weatherupdate",level:4},{value:"&quot;time&quot;",id:"time",level:4},{value:"&quot;kicked&quot; (reason, loggedIn)",id:"kicked-reason-loggedin",level:4},{value:"&quot;end&quot; (reason)",id:"end-reason",level:4},{value:"&quot;error&quot; (err)",id:"error-err",level:4},{value:"&quot;spawnReset&quot;",id:"spawnreset",level:4},{value:"&quot;death&quot;",id:"death",level:4},{value:"&quot;health&quot;",id:"health",level:4},{value:"&quot;breath&quot;",id:"breath",level:4},{value:"&quot;entityAttributes&quot; (entity)",id:"entityattributes-entity",level:4},{value:"&quot;entitySwingArm&quot; (entity)",id:"entityswingarm-entity",level:4},{value:"&quot;entityHurt&quot; (entity)",id:"entityhurt-entity",level:4},{value:"&quot;entityDead&quot; (entity)",id:"entitydead-entity",level:4},{value:"&quot;entityTaming&quot; (entity)",id:"entitytaming-entity",level:4},{value:"&quot;entityTamed&quot; (entity)",id:"entitytamed-entity",level:4},{value:"&quot;entityShakingOffWater&quot; (entity)",id:"entityshakingoffwater-entity",level:4},{value:"&quot;entityEatingGrass&quot; (entity)",id:"entityeatinggrass-entity",level:4},{value:"&quot;entityHandSwap&quot; (entity)",id:"entityhandswap-entity",level:4},{value:"&quot;entityWake&quot; (entity)",id:"entitywake-entity",level:4},{value:"&quot;entityEat&quot; (entity)",id:"entityeat-entity",level:4},{value:"&quot;entityCriticalEffect&quot; (entity)",id:"entitycriticaleffect-entity",level:4},{value:"&quot;entityMagicCriticalEffect&quot; (entity)",id:"entitymagiccriticaleffect-entity",level:4},{value:"&quot;entityCrouch&quot; (entity)",id:"entitycrouch-entity",level:4},{value:"&quot;entityUncrouch&quot; (entity)",id:"entityuncrouch-entity",level:4},{value:"&quot;entityEquip&quot; (entity)",id:"entityequip-entity",level:4},{value:"&quot;entitySleep&quot; (entity)",id:"entitysleep-entity",level:4},{value:"&quot;entitySpawn&quot; (entity)",id:"entityspawn-entity",level:4},{value:"&quot;entityElytraFlew&quot; (entity)",id:"entityelytraflew-entity",level:4},{value:"&quot;itemDrop&quot; (entity)",id:"itemdrop-entity",level:4},{value:"&quot;playerCollect&quot; (collector, collected)",id:"playercollect-collector-collected",level:4},{value:"&quot;entityGone&quot; (entity)",id:"entitygone-entity",level:4},{value:"&quot;entityMoved&quot; (entity)",id:"entitymoved-entity",level:4},{value:"&quot;entityDetach&quot; (entity, vehicle)",id:"entitydetach-entity-vehicle",level:4},{value:"&quot;entityAttach&quot; (entity, vehicle)",id:"entityattach-entity-vehicle",level:4},{value:"&quot;entityUpdate&quot; (entity)",id:"entityupdate-entity",level:4},{value:"&quot;entityEffect&quot; (entity, effect)",id:"entityeffect-entity-effect",level:4},{value:"&quot;entityEffectEnd&quot; (entity, effect)",id:"entityeffectend-entity-effect",level:4},{value:"&quot;playerJoined&quot; (player)",id:"playerjoined-player",level:4},{value:"&quot;playerUpdated&quot; (player)",id:"playerupdated-player",level:4},{value:"&quot;playerLeft&quot; (player)",id:"playerleft-player",level:4},{value:"&quot;blockUpdate&quot; (oldBlock, newBlock)",id:"blockupdate-oldblock-newblock",level:4},{value:"&quot;blockUpdate:(x, y, z)&quot; (oldBlock, newBlock)",id:"blockupdatex-y-z-oldblock-newblock",level:4},{value:"&quot;blockPlaced&quot; (oldBlock, newBlock)",id:"blockplaced-oldblock-newblock",level:4},{value:"&quot;chunkColumnLoad&quot; (point)",id:"chunkcolumnload-point",level:4},{value:"&quot;chunkColumnUnload&quot; (point)",id:"chunkcolumnunload-point",level:4},{value:"&quot;soundEffectHeard&quot; (soundName, position, volume, pitch)",id:"soundeffectheard-soundname-position-volume-pitch",level:4},{value:"&quot;hardcodedSoundEffectHeard&quot; (soundId, soundCategory, position, volume, pitch)",id:"hardcodedsoundeffectheard-soundid-soundcategory-position-volume-pitch",level:4},{value:"&quot;noteHeard&quot; (block, instrument, pitch)",id:"noteheard-block-instrument-pitch",level:4},{value:"&quot;pistonMove&quot; (block, isPulling, direction)",id:"pistonmove-block-ispulling-direction",level:4},{value:"&quot;chestLidMove&quot; (block, isOpen, block2)",id:"chestlidmove-block-isopen-block2",level:4},{value:"&quot;blockBreakProgressObserved&quot; (block, destroyStage, entity)",id:"blockbreakprogressobserved-block-destroystage-entity",level:4},{value:"&quot;blockBreakProgressEnd&quot; (block, entity)",id:"blockbreakprogressend-block-entity",level:4},{value:"&quot;diggingCompleted&quot; (block)",id:"diggingcompleted-block",level:4},{value:"&quot;diggingAborted&quot; (block)",id:"diggingaborted-block",level:4},{value:"&quot;usedFirework&quot; (fireworkEntityId)",id:"usedfirework-fireworkentityid",level:4},{value:"&quot;move&quot;",id:"move",level:4},{value:"&quot;forcedMove&quot;",id:"forcedmove",level:4},{value:"&quot;mount&quot;",id:"mount",level:4},{value:"&quot;dismount&quot; (vehicle)",id:"dismount-vehicle",level:4},{value:"&quot;windowOpen&quot; (window)",id:"windowopen-window",level:4},{value:"&quot;windowClose&quot; (window)",id:"windowclose-window",level:4},{value:"&quot;sleep&quot;",id:"sleep",level:4},{value:"&quot;wake&quot;",id:"wake",level:4},{value:"&quot;experience&quot;",id:"experience",level:4},{value:"&quot;scoreboardCreated&quot; (scoreboard)",id:"scoreboardcreated-scoreboard",level:4},{value:"&quot;scoreboardDeleted&quot; (scoreboard)",id:"scoreboarddeleted-scoreboard",level:4},{value:"&quot;scoreboardTitleChanged&quot; (scoreboard)",id:"scoreboardtitlechanged-scoreboard",level:4},{value:"&quot;scoreUpdated&quot; (scoreboard, item)",id:"scoreupdated-scoreboard-item",level:4},{value:"&quot;scoreRemoved&quot; (scoreboard, item)",id:"scoreremoved-scoreboard-item",level:4},{value:"&quot;scoreboardPosition&quot; (position, scoreboard)",id:"scoreboardposition-position-scoreboard",level:4},{value:"&quot;teamCreated&quot; (team)",id:"teamcreated-team",level:4},{value:"&quot;teamRemoved&quot; (team)",id:"teamremoved-team",level:4},{value:"&quot;teamUpdated&quot; (team)",id:"teamupdated-team",level:4},{value:"&quot;teamMemberAdded&quot; (team)",id:"teammemberadded-team",level:4},{value:"&quot;teamMemberRemoved&quot; (team)",id:"teammemberremoved-team",level:4},{value:"&quot;bossBarCreated&quot; (bossBar)",id:"bossbarcreated-bossbar",level:4},{value:"&quot;bossBarDeleted&quot; (bossBar)",id:"bossbardeleted-bossbar",level:4},{value:"&quot;bossBarUpdated&quot; (bossBar)",id:"bossbarupdated-bossbar",level:4},{value:"&quot;heldItemChanged&quot; (heldItem)",id:"helditemchanged-helditem",level:4},{value:"&quot;physicsTick&quot; ()",id:"physicstick-",level:4},{value:"&quot;chat&quot; (matches)",id:"chat-matches",level:4},{value:"&quot;particle&quot;",id:"particle",level:4},{value:"Functions",id:"functions",level:3},{value:"bot.blockAt(point, extraInfos=true)",id:"botblockatpoint-extrainfostrue",level:4},{value:"bot.waitForChunksToLoad()",id:"botwaitforchunkstoload",level:4},{value:"bot.blockInSight(maxSteps, vectorLength)",id:"botblockinsightmaxsteps-vectorlength",level:4},{value:"bot.blockAtCursor(maxDistance=256)",id:"botblockatcursormaxdistance256",level:4},{value:"bot.entityAtCursor(maxDistance=3.5)",id:"botentityatcursormaxdistance35",level:4},{value:"bot.blockAtEntityCursor(entity=bot.entity, maxDistance=256)",id:"botblockatentitycursorentitybotentity-maxdistance256",level:4},{value:"bot.canSeeBlock(block)",id:"botcanseeblockblock",level:4},{value:"bot.findBlocks(options)",id:"botfindblocksoptions",level:4},{value:"bot.findBlock(options)",id:"botfindblockoptions",level:4},{value:"bot.canDigBlock(block)",id:"botcandigblockblock",level:4},{value:"bot.recipesFor(itemType, metadata, minResultCount, craftingTable)",id:"botrecipesforitemtype-metadata-minresultcount-craftingtable",level:4},{value:"bot.recipesAll(itemType, metadata, craftingTable)",id:"botrecipesallitemtype-metadata-craftingtable",level:4},{value:"bot.nearestEntity(filter)",id:"botnearestentityfilter",level:4},{value:"Methods",id:"methods",level:3},{value:"bot.end(reason)",id:"botendreason",level:4},{value:"bot.quit(reason)",id:"botquitreason",level:4},{value:"bot.tabComplete(str, [assumeCommand], [sendBlockInSight], [timeout])",id:"bottabcompletestr-assumecommand-sendblockinsight-timeout",level:4},{value:"bot.chat(message)",id:"botchatmessage",level:4},{value:"bot.whisper(username, message)",id:"botwhisperusername-message",level:4},{value:"bot.chatAddPattern(pattern, chatType, description)",id:"botchataddpatternpattern-chattype-description",level:4},{value:"bot.addChatPattern(name, pattern, chatPatternOptions)",id:"botaddchatpatternname-pattern-chatpatternoptions",level:4},{value:"bot.addChatPatternSet(name, patterns, chatPatternOptions)",id:"botaddchatpatternsetname-patterns-chatpatternoptions",level:4},{value:"bot.removeChatPattern(name)",id:"botremovechatpatternname",level:4},{value:"bot.awaitMessage(...args)",id:"botawaitmessageargs",level:4},{value:"bot.setSettings(options)",id:"botsetsettingsoptions",level:4},{value:"bot.loadPlugin(plugin)",id:"botloadpluginplugin",level:4},{value:"bot.loadPlugins(plugins)",id:"botloadpluginsplugins",level:4},{value:"bot.hasPlugin(plugin)",id:"bothaspluginplugin",level:4},{value:"bot.sleep(bedBlock)",id:"botsleepbedblock",level:4},{value:"bot.isABed(bedBlock)",id:"botisabedbedblock",level:4},{value:"bot.wake()",id:"botwake",level:4},{value:"bot.setControlState(control, state)",id:"botsetcontrolstatecontrol-state",level:4},{value:"bot.getControlState(control)",id:"botgetcontrolstatecontrol",level:4},{value:"bot.clearControlStates()",id:"botclearcontrolstates",level:4},{value:"bot.getExplosionDamages(entity, position, radius, [rawDamages])",id:"botgetexplosiondamagesentity-position-radius-rawdamages",level:4},{value:"bot.lookAt(point, [force])",id:"botlookatpoint-force",level:4},{value:"bot.look(yaw, pitch, [force])",id:"botlookyaw-pitch-force",level:4},{value:"bot.updateSign(block, text, back = false)",id:"botupdatesignblock-text-back--false",level:4},{value:"bot.equip(item, destination)",id:"botequipitem-destination",level:4},{value:"bot.unequip(destination)",id:"botunequipdestination",level:4},{value:"bot.tossStack(item)",id:"bottossstackitem",level:4},{value:"bot.toss(itemType, metadata, count)",id:"bottossitemtype-metadata-count",level:4},{value:"bot.elytraFly()",id:"botelytrafly",level:4},{value:"bot.dig(block, [forceLook = true], [digFace])",id:"botdigblock-forcelook--true-digface",level:4},{value:"bot.stopDigging()",id:"botstopdigging",level:4},{value:"bot.digTime(block)",id:"botdigtimeblock",level:4},{value:"bot.acceptResourcePack()",id:"botacceptresourcepack",level:4},{value:"bot.denyResourcePack()",id:"botdenyresourcepack",level:4},{value:"bot.placeBlock(referenceBlock, faceVector)",id:"botplaceblockreferenceblock-facevector",level:4},{value:"bot.placeEntity(referenceBlock, faceVector)",id:"botplaceentityreferenceblock-facevector",level:4},{value:"bot.activateBlock(block, direction?: Vec3, cursorPos?: Vec3)",id:"botactivateblockblock-direction-vec3-cursorpos-vec3",level:4},{value:"bot.activateEntity(entity)",id:"botactivateentityentity",level:4},{value:"bot.activateEntityAt(entity, position)",id:"botactivateentityatentity-position",level:4},{value:"bot.consume()",id:"botconsume",level:4},{value:"bot.fish()",id:"botfish",level:4},{value:"bot.activateItem(offHand=false)",id:"botactivateitemoffhandfalse",level:4},{value:"bot.deactivateItem()",id:"botdeactivateitem",level:4},{value:"bot.useOn(targetEntity)",id:"botuseontargetentity",level:4},{value:"bot.attack(entity, swing = true)",id:"botattackentity-swing--true",level:4},{value:"bot.swingArm([hand], showHand)",id:"botswingarmhand-showhand",level:4},{value:"bot.mount(entity)",id:"botmountentity",level:4},{value:"bot.dismount()",id:"botdismount",level:4},{value:"bot.moveVehicle(left,forward)",id:"botmovevehicleleftforward",level:4},{value:"bot.setQuickBarSlot(slot)",id:"botsetquickbarslotslot",level:4},{value:"bot.craft(recipe, count, craftingTable)",id:"botcraftrecipe-count-craftingtable",level:4},{value:"bot.writeBook(slot, pages)",id:"botwritebookslot-pages",level:4},{value:"bot.openContainer(containerBlock or containerEntity, direction?, cursorPos?)",id:"botopencontainercontainerblock-or-containerentity-direction-cursorpos",level:4},{value:"bot.openChest(chestBlock or minecartchestEntity, direction?, cursorPos?)",id:"botopenchestchestblock-or-minecartchestentity-direction-cursorpos",level:4},{value:"bot.openFurnace(furnaceBlock)",id:"botopenfurnacefurnaceblock",level:4},{value:"bot.openDispenser(dispenserBlock)",id:"botopendispenserdispenserblock",level:4},{value:"bot.openEnchantmentTable(enchantmentTableBlock)",id:"botopenenchantmenttableenchantmenttableblock",level:4},{value:"bot.openAnvil(anvilBlock)",id:"botopenanvilanvilblock",level:4},{value:"bot.openVillager(villagerEntity)",id:"botopenvillagervillagerentity",level:4},{value:"bot.trade(villagerInstance, tradeIndex, [times])",id:"bottradevillagerinstance-tradeindex-times",level:4},{value:"bot.setCommandBlock(pos, command, [options])",id:"botsetcommandblockpos-command-options",level:4},{value:"bot.supportFeature(name)",id:"botsupportfeaturename",level:4},{value:"bot.waitForTicks(ticks)",id:"botwaitforticksticks",level:4},{value:"bot.respawn()",id:"botrespawn",level:4},{value:"Lower level inventory methods",id:"lower-level-inventory-methods",level:3},{value:"bot.clickWindow(slot, mouseButton, mode)",id:"botclickwindowslot-mousebutton-mode",level:4},{value:"bot.putSelectedItemRange(start, end, window, slot)",id:"botputselecteditemrangestart-end-window-slot",level:4},{value:"bot.putAway(slot)",id:"botputawayslot",level:4},{value:"bot.closeWindow(window)",id:"botclosewindowwindow",level:4},{value:"bot.transfer(options)",id:"bottransferoptions",level:4},{value:"bot.openBlock(block, direction?: Vec3, cursorPos?: Vec3)",id:"botopenblockblock-direction-vec3-cursorpos-vec3",level:4},{value:"bot.openEntity(entity)",id:"botopenentityentity",level:4},{value:"bot.moveSlotItem(sourceSlot, destSlot)",id:"botmoveslotitemsourceslot-destslot",level:4},{value:"bot.updateHeldItem()",id:"botupdatehelditem",level:4},{value:"bot.getEquipmentDestSlot(destination)",id:"botgetequipmentdestslotdestination",level:4},{value:"bot.creative",id:"botcreative",level:3},{value:"bot.creative.setInventorySlot(slot, item)",id:"botcreativesetinventoryslotslot-item",level:4},{value:"bot.creative.clearSlot(slot)",id:"botcreativeclearslotslot",level:4},{value:"bot.creative.clearInventory()",id:"botcreativeclearinventory",level:4},{value:"bot.creative.flyTo(destination)",id:"botcreativeflytodestination",level:4},{value:"bot.creative.startFlying()",id:"botcreativestartflying",level:4},{value:"bot.creative.stopFlying()",id:"botcreativestopflying",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Table of Contents"}),"  ",(0,i.jsxs)(n.em,{children:["generated with ",(0,i.jsx)(n.a,{href:"https://github.com/thlorenz/doctoc",children:"DocToc"})]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#api",children:"API"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#enums",children:"Enums"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#minecraft-data",children:"minecraft-data"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mcdatablocks",children:"mcdata.blocks"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mcdataitems",children:"mcdata.items"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mcdatamaterials",children:"mcdata.materials"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mcdatarecipes",children:"mcdata.recipes"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mcdatainstruments",children:"mcdata.instruments"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mcdatabiomes",children:"mcdata.biomes"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mcdataentities",children:"mcdata.entities"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#classes",children:"Classes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#vec3",children:"vec3"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mineflayerlocation",children:"mineflayer.Location"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#entity",children:"Entity"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#player-skin-data",children:"Player Skin Data"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#block",children:"Block"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#biome",children:"Biome"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#item",children:"Item"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#windowswindow-base-class",children:"windows.Window (base class)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#windowdeposititemtype-metadata-count-nbt",children:"window.deposit(itemType, metadata, count, nbt)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#windowwithdrawitemtype-metadata-count-nbt",children:"window.withdraw(itemType, metadata, count, nbt)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#windowclose",children:"window.close()"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#recipe",children:"Recipe"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mineflayercontainer",children:"mineflayer.Container"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#mineflayerfurnace",children:"mineflayer.Furnace"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnace-update",children:'furnace "update"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnacetakeinput",children:"furnace.takeInput()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnacetakefuel",children:"furnace.takeFuel()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnacetakeoutput",children:"furnace.takeOutput()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnaceputinputitemtype-metadata-count",children:"furnace.putInput(itemType, metadata, count)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnaceputfuelitemtype-metadata-count",children:"furnace.putFuel(itemType, metadata, count)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnaceinputitem",children:"furnace.inputItem()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnacefuelitem",children:"furnace.fuelItem()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnaceoutputitem",children:"furnace.outputItem()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnacefuel",children:"furnace.fuel"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#furnaceprogress",children:"furnace.progress"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#mineflayerenchantmenttable",children:"mineflayer.EnchantmentTable"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#enchantmenttable-ready",children:'enchantmentTable "ready"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#enchantmenttabletargetitem",children:"enchantmentTable.targetItem()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#enchantmenttablexpseed",children:"enchantmentTable.xpseed"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#enchantmenttableenchantments",children:"enchantmentTable.enchantments"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#enchantmenttableenchantchoice",children:"enchantmentTable.enchant(choice)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#enchantmenttabletaketargetitem",children:"enchantmentTable.takeTargetItem()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#enchantmenttableputtargetitemitem",children:"enchantmentTable.putTargetItem(item)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#enchantmenttableputlapisitem",children:"enchantmentTable.putLapis(item)"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#mineflayeranvil",children:"mineflayer.anvil"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#anvilcombineitemone-itemtwo-name",children:"anvil.combine(itemOne, itemTwo[, name])"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#anvilcombineitem-name",children:"anvil.combine(item[, name])"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#villager-ready",children:'villager "ready"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#villagertrades",children:"villager.trades"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#villagertradetradeindex-times",children:"villager.trade(tradeIndex, [times])"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#mineflayerscoreboard",children:"mineflayer.ScoreBoard"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#scoreboardname",children:"ScoreBoard.name"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#scoreboardtitle",children:"ScoreBoard.title"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#scoreboarditemsmap",children:"ScoreBoard.itemsMap"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#scoreboarditems",children:"ScoreBoard.items"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#mineflayerteam",children:"mineflayer.Team"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teamname",children:"Team.name"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teamfriendlyfire",children:"Team.friendlyFire"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teamnametagvisibility",children:"Team.nameTagVisibility"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teamcollisionrule",children:"Team.collisionRule"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teamcolor",children:"Team.color"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teamprefix",children:"Team.prefix"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teamsuffix",children:"Team.suffix"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teammembers",children:"Team.members"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#mineflayerbossbar",children:"mineflayer.BossBar"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbartitle",children:"BossBar.title"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbarhealth",children:"BossBar.health"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbardividers",children:"BossBar.dividers"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbarentityuuid",children:"BossBar.entityUUID"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbarshoulddarkensky",children:"BossBar.shouldDarkenSky"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbarisdragonbar",children:"BossBar.isDragonBar"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbarcreatefog",children:"BossBar.createFog"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbarcolor",children:"BossBar.color"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#mineflayerparticle",children:"mineflayer.Particle"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#particleid",children:"Particle.id"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#particlename",children:"Particle.name"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#particleposition",children:"Particle.position"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#particleoffset",children:"Particle.offset"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#particlelongdistancerender",children:"Particle.longDistanceRender"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#particlecount",children:"Particle.count"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#particlemovementspeed",children:"Particle.movementSpeed"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#bot",children:"Bot"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mineflayercreatebotoptions",children:"mineflayer.createBot(options)"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#properties",children:"Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botregistry",children:"bot.registry"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#botworld",children:"bot.world"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#world-blockupdate-oldblock-newblock",children:'world "blockUpdate" (oldBlock, newBlock)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#world-blockupdatex-y-z-oldblock-newblock",children:'world "blockUpdate:(x, y, z)" (oldBlock, newBlock)'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botentity",children:"bot.entity"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botentities",children:"bot.entities"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botusername",children:"bot.username"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botspawnpoint",children:"bot.spawnPoint"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bothelditem",children:"bot.heldItem"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botusinghelditem",children:"bot.usingHeldItem"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgameleveltype",children:"bot.game.levelType"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgamedimension",children:"bot.game.dimension"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgamedifficulty",children:"bot.game.difficulty"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgamegamemode",children:"bot.game.gameMode"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgamehardcore",children:"bot.game.hardcore"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgamemaxplayers",children:"bot.game.maxPlayers"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgameserverbrand",children:"bot.game.serverBrand"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgameminy",children:"bot.game.minY"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgameheight",children:"bot.game.height"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botphysicsenabled",children:"bot.physicsEnabled"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botplayer",children:"bot.player"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botplayers",children:"bot.players"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottablist",children:"bot.tablist"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botisraining",children:"bot.isRaining"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botrainstate",children:"bot.rainState"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botthunderstate",children:"bot.thunderState"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botchatpatterns",children:"bot.chatPatterns"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingschat",children:"bot.settings.chat"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingscolorsenabled",children:"bot.settings.colorsEnabled"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsviewdistance",children:"bot.settings.viewDistance"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsdifficulty",children:"bot.settings.difficulty"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#botsettingsskinparts",children:"bot.settings.skinParts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsskinpartsshowcape---boolean",children:"bot.settings.skinParts.showCape - boolean"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsskinpartsshowjacket---boolean",children:"bot.settings.skinParts.showJacket - boolean"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsskinpartsshowleftsleeve---boolean",children:"bot.settings.skinParts.showLeftSleeve - boolean"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsskinpartsshowrightsleeve---boolean",children:"bot.settings.skinParts.showRightSleeve - boolean"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsskinpartsshowleftpants---boolean",children:"bot.settings.skinParts.showLeftPants - boolean"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsskinpartsshowrightpants---boolean",children:"bot.settings.skinParts.showRightPants - boolean"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsskinpartsshowhat---boolean",children:"bot.settings.skinParts.showHat - boolean"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsenabletextfiltering---boolean",children:"bot.settings.enableTextFiltering - boolean"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsettingsenableserverlisting---boolean",children:"bot.settings.enableServerListing - boolean"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botexperiencelevel",children:"bot.experience.level"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botexperiencepoints",children:"bot.experience.points"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botexperienceprogress",children:"bot.experience.progress"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bothealth",children:"bot.health"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botfood",children:"bot.food"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botfoodsaturation",children:"bot.foodSaturation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botoxygenlevel",children:"bot.oxygenLevel"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botphysics",children:"bot.physics"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botfireworkrocketduration",children:"bot.fireworkRocketDuration"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsimpleclickleftmouse-slot",children:"bot.simpleClick.leftMouse (slot)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsimpleclickrightmouse-slot",children:"bot.simpleClick.rightMouse (slot)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottimedodaylightcycle",children:"bot.time.doDaylightCycle"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottimebigtime",children:"bot.time.bigTime"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottimetime",children:"bot.time.time"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottimetimeofday",children:"bot.time.timeOfDay"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottimeday",children:"bot.time.day"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottimeisday",children:"bot.time.isDay"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottimemoonphase",children:"bot.time.moonPhase"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottimebigage",children:"bot.time.bigAge"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottimeage",children:"bot.time.age"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botquickbarslot",children:"bot.quickBarSlot"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botinventory",children:"bot.inventory"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottargetdigblock",children:"bot.targetDigBlock"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botissleeping",children:"bot.isSleeping"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botscoreboards",children:"bot.scoreboards"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botscoreboard",children:"bot.scoreboard"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botteams",children:"bot.teams"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botteammap",children:"bot.teamMap"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botcontrolstate",children:"bot.controlState"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#events",children:"Events"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#chat-username-message-translate-jsonmsg-matches",children:'"chat" (username, message, translate, jsonMsg, matches)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#whisper-username-message-translate-jsonmsg-matches",children:'"whisper" (username, message, translate, jsonMsg, matches)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#actionbar-jsonmsg-verified",children:'"actionBar" (jsonMsg, verified)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#message-jsonmsg-position-sender-verified",children:'"message" (jsonMsg, position, sender, verified)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#messagestr-message-messageposition-jsonmsg-sender-verified",children:'"messagestr" (message, messagePosition, jsonMsg, sender, verified)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#inject_allowed",children:'"inject_allowed"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#login",children:'"login"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#spawn",children:'"spawn"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#respawn",children:'"respawn"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#game",children:'"game"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#resourcepack-url-hash",children:'"resourcePack" (url, hash)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#title",children:'"title"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#rain",children:'"rain"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#weatherupdate",children:'"weatherUpdate"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#time",children:'"time"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#kicked-reason-loggedin",children:'"kicked" (reason, loggedIn)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#end-reason",children:'"end" (reason)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#error-err",children:'"error" (err)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#spawnreset",children:'"spawnReset"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#death",children:'"death"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#health",children:'"health"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#breath",children:'"breath"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityattributes-entity",children:'"entityAttributes" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityswingarm-entity",children:'"entitySwingArm" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityhurt-entity",children:'"entityHurt" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitydead-entity",children:'"entityDead" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitytaming-entity",children:'"entityTaming" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitytamed-entity",children:'"entityTamed" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityshakingoffwater-entity",children:'"entityShakingOffWater" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityeatinggrass-entity",children:'"entityEatingGrass" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityhandswap-entity",children:'"entityHandSwap" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitywake-entity",children:'"entityWake" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityeat-entity",children:'"entityEat" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitycriticaleffect-entity",children:'"entityCriticalEffect" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitymagiccriticaleffect-entity",children:'"entityMagicCriticalEffect" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitycrouch-entity",children:'"entityCrouch" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityuncrouch-entity",children:'"entityUncrouch" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityequip-entity",children:'"entityEquip" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitysleep-entity",children:'"entitySleep" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityspawn-entity",children:'"entitySpawn" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityelytraflew-entity",children:'"entityElytraFlew" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#itemdrop-entity",children:'"itemDrop" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#playercollect-collector-collected",children:'"playerCollect" (collector, collected)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitygone-entity",children:'"entityGone" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitymoved-entity",children:'"entityMoved" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entitydetach-entity-vehicle",children:'"entityDetach" (entity, vehicle)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityattach-entity-vehicle",children:'"entityAttach" (entity, vehicle)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityupdate-entity",children:'"entityUpdate" (entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityeffect-entity-effect",children:'"entityEffect" (entity, effect)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#entityeffectend-entity-effect",children:'"entityEffectEnd" (entity, effect)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#playerjoined-player",children:'"playerJoined" (player)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#playerupdated-player",children:'"playerUpdated" (player)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#playerleft-player",children:'"playerLeft" (player)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#blockupdate-oldblock-newblock",children:'"blockUpdate" (oldBlock, newBlock)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#blockupdatex-y-z-oldblock-newblock",children:'"blockUpdate:(x, y, z)" (oldBlock, newBlock)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#blockplaced-oldblock-newblock",children:'"blockPlaced" (oldBlock, newBlock)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#chunkcolumnload-point",children:'"chunkColumnLoad" (point)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#chunkcolumnunload-point",children:'"chunkColumnUnload" (point)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#soundeffectheard-soundname-position-volume-pitch",children:'"soundEffectHeard" (soundName, position, volume, pitch)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#hardcodedsoundeffectheard-soundid-soundcategory-position-volume-pitch",children:'"hardcodedSoundEffectHeard" (soundId, soundCategory, position, volume, pitch)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#noteheard-block-instrument-pitch",children:'"noteHeard" (block, instrument, pitch)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#pistonmove-block-ispulling-direction",children:'"pistonMove" (block, isPulling, direction)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#chestlidmove-block-isopen-block2",children:'"chestLidMove" (block, isOpen, block2)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#blockbreakprogressobserved-block-destroystage-entity",children:'"blockBreakProgressObserved" (block, destroyStage, entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#blockbreakprogressend-block-entity",children:'"blockBreakProgressEnd" (block, entity)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#diggingcompleted-block",children:'"diggingCompleted" (block)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#diggingaborted-block",children:'"diggingAborted" (block)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#usedfirework-fireworkentityid",children:'"usedFirework" (fireworkEntityId)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#move",children:'"move"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#forcedmove",children:'"forcedMove"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mount",children:'"mount"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#dismount-vehicle",children:'"dismount" (vehicle)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#windowopen-window",children:'"windowOpen" (window)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#windowclose-window",children:'"windowClose" (window)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#sleep",children:'"sleep"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#wake",children:'"wake"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#experience",children:'"experience"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#scoreboardcreated-scoreboard",children:'"scoreboardCreated" (scoreboard)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#scoreboarddeleted-scoreboard",children:'"scoreboardDeleted" (scoreboard)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#scoreboardtitlechanged-scoreboard",children:'"scoreboardTitleChanged" (scoreboard)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#scoreupdated-scoreboard-item",children:'"scoreUpdated" (scoreboard, item)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#scoreremoved-scoreboard-item",children:'"scoreRemoved" (scoreboard, item)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#scoreboardposition-position-scoreboard",children:'"scoreboardPosition" (position, scoreboard)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teamcreated-team",children:'"teamCreated" (team)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teamremoved-team",children:'"teamRemoved" (team)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teamupdated-team",children:'"teamUpdated" (team)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teammemberadded-team",children:'"teamMemberAdded" (team)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#teammemberremoved-team",children:'"teamMemberRemoved" (team)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbarcreated-bossbar",children:'"bossBarCreated" (bossBar)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbardeleted-bossbar",children:'"bossBarDeleted" (bossBar)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bossbarupdated-bossbar",children:'"bossBarUpdated" (bossBar)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#helditemchanged-helditem",children:'"heldItemChanged" (heldItem)'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#physicstick-",children:'"physicsTick" ()'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.a,{href:"#chatname-matches",children:['"chat',":name",'" (matches)']})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#particle",children:'"particle"'})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#functions",children:"Functions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botblockatpoint-extrainfostrue",children:"bot.blockAt(point, extraInfos=true)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botwaitforchunkstoload",children:"bot.waitForChunksToLoad()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botblockinsightmaxsteps-vectorlength",children:"bot.blockInSight(maxSteps, vectorLength)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botblockatcursormaxdistance256",children:"bot.blockAtCursor(maxDistance=256)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botentityatcursormaxdistance35",children:"bot.entityAtCursor(maxDistance=3.5)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botblockatentitycursorentitybotentity-maxdistance256",children:"bot.blockAtEntityCursor(entity=bot.entity, maxDistance=256)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botcanseeblockblock",children:"bot.canSeeBlock(block)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botfindblocksoptions",children:"bot.findBlocks(options)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botfindblockoptions",children:"bot.findBlock(options)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botcandigblockblock",children:"bot.canDigBlock(block)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botrecipesforitemtype-metadata-minresultcount-craftingtable",children:"bot.recipesFor(itemType, metadata, minResultCount, craftingTable)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botrecipesallitemtype-metadata-craftingtable",children:"bot.recipesAll(itemType, metadata, craftingTable)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botnearestentitymatch--entity---return-true-",children:"bot.nearestEntity()"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#methods",children:"Methods"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botendreason",children:"bot.end(reason)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botquitreason",children:"bot.quit(reason)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottabcompletestr-assumecommand-sendblockinsight-timeout",children:"bot.tabComplete(str, [assumeCommand], [sendBlockInSight], [timeout])"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botchatmessage",children:"bot.chat(message)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botwhisperusername-message",children:"bot.whisper(username, message)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botchataddpatternpattern-chattype-description",children:"bot.chatAddPattern(pattern, chatType, description)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botaddchatpatternname-pattern-chatpatternoptions",children:"bot.addChatPattern(name, pattern, chatPatternOptions)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botaddchatpatternsetname-patterns-chatpatternoptions",children:"bot.addChatPatternSet(name, patterns, chatPatternOptions)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botremovechatpatternname",children:"bot.removeChatPattern(name)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botawaitmessageargs",children:"bot.awaitMessage(...args)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsetsettingsoptions",children:"bot.setSettings(options)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botloadpluginplugin",children:"bot.loadPlugin(plugin)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botloadpluginsplugins",children:"bot.loadPlugins(plugins)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bothaspluginplugin",children:"bot.hasPlugin(plugin)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsleepbedblock",children:"bot.sleep(bedBlock)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botisabedbedblock",children:"bot.isABed(bedBlock)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botwake",children:"bot.wake()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsetcontrolstatecontrol-state",children:"bot.setControlState(control, state)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgetcontrolstatecontrol",children:"bot.getControlState(control)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botclearcontrolstates",children:"bot.clearControlStates()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgetexplosiondamagesentity-position-radius-rawdamages",children:"bot.getExplosionDamages(entity, position, radius, [rawDamages])"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botlookatpoint-force",children:"bot.lookAt(point, [force])"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botlookyaw-pitch-force",children:"bot.look(yaw, pitch, [force])"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botupdatesignblock-text-back--false",children:"bot.updateSign(block, text, back = false)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botequipitem-destination",children:"bot.equip(item, destination)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botunequipdestination",children:"bot.unequip(destination)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottossstackitem",children:"bot.tossStack(item)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottossitemtype-metadata-count",children:"bot.toss(itemType, metadata, count)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botelytrafly",children:"bot.elytraFly()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botdigblock-forcelook--true-digface",children:"bot.dig(block, [forceLook = true], [digFace])"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botstopdigging",children:"bot.stopDigging()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botdigtimeblock",children:"bot.digTime(block)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botacceptresourcepack",children:"bot.acceptResourcePack()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botdenyresourcepack",children:"bot.denyResourcePack()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botplaceblockreferenceblock-facevector",children:"bot.placeBlock(referenceBlock, faceVector)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botplaceentityreferenceblock-facevector",children:"bot.placeEntity(referenceBlock, faceVector)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botactivateblockblock-direction-vec3-cursorpos-vec3",children:"bot.activateBlock(block, direction?: Vec3, cursorPos?: Vec3)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botactivateentityentity",children:"bot.activateEntity(entity)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botactivateentityatentity-position",children:"bot.activateEntityAt(entity, position)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botconsume",children:"bot.consume()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botfish",children:"bot.fish()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botactivateitemoffhandfalse",children:"bot.activateItem(offHand=false)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botdeactivateitem",children:"bot.deactivateItem()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botuseontargetentity",children:"bot.useOn(targetEntity)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botattackentity-swing--true",children:"bot.attack(entity, swing = true)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botswingarmhand-showhand",children:"bot.swingArm([hand], showHand)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botmountentity",children:"bot.mount(entity)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botdismount",children:"bot.dismount()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botmovevehicleleftforward",children:"bot.moveVehicle(left,forward)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsetquickbarslotslot",children:"bot.setQuickBarSlot(slot)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botcraftrecipe-count-craftingtable",children:"bot.craft(recipe, count, craftingTable)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botwritebookslot-pages",children:"bot.writeBook(slot, pages)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botopencontainercontainerblock-or-containerentity-direction-cursorpos",children:"bot.openContainer(containerBlock or containerEntity, direction?, cursorPos?)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botopenchestchestblock-or-minecartchestentity-direction-cursorpos",children:"bot.openChest(chestBlock or minecartchestEntity, direction?, cursorPos?)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botopenfurnacefurnaceblock",children:"bot.openFurnace(furnaceBlock)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botopendispenserdispenserblock",children:"bot.openDispenser(dispenserBlock)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botopenenchantmenttableenchantmenttableblock",children:"bot.openEnchantmentTable(enchantmentTableBlock)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botopenanvilanvilblock",children:"bot.openAnvil(anvilBlock)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botopenvillagervillagerentity",children:"bot.openVillager(villagerEntity)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottradevillagerinstance-tradeindex-times",children:"bot.trade(villagerInstance, tradeIndex, [times])"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsetcommandblockpos-command-options",children:"bot.setCommandBlock(pos, command, [options])"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botsupportfeaturename",children:"bot.supportFeature(name)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botwaitforticksticks",children:"bot.waitForTicks(ticks)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botrespawn",children:"bot.respawn()"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#lower-level-inventory-methods",children:"Lower level inventory methods"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botclickwindowslot-mousebutton-mode",children:"bot.clickWindow(slot, mouseButton, mode)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botputselecteditemrangestart-end-window-slot",children:"bot.putSelectedItemRange(start, end, window, slot)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botputawayslot",children:"bot.putAway(slot)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botclosewindowwindow",children:"bot.closeWindow(window)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bottransferoptions",children:"bot.transfer(options)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botopenblockblock-direction-vec3-cursorpos-vec3",children:"bot.openBlock(block, direction?: Vec3, cursorPos?: Vec3)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botopenentityentity",children:"bot.openEntity(entity)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botmoveslotitemsourceslot-destslot",children:"bot.moveSlotItem(sourceSlot, destSlot)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botupdatehelditem",children:"bot.updateHeldItem()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botgetequipmentdestslotdestination",children:"bot.getEquipmentDestSlot(destination)"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#botcreative",children:"bot.creative"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botcreativesetinventoryslotslot-item",children:"bot.creative.setInventorySlot(slot, item)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botcreativeclearslotslot",children:"bot.creative.clearSlot(slot)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botcreativeclearinventory",children:"bot.creative.clearInventory()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botcreativeflytodestination",children:"bot.creative.flyTo(destination)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botcreativestartflying",children:"bot.creative.startFlying()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#botcreativestopflying",children:"bot.creative.stopFlying()"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h1,{id:"api",children:"API"}),"\n",(0,i.jsx)(n.h2,{id:"enums",children:"Enums"}),"\n",(0,i.jsxs)(n.p,{children:["These enums are stored in the language independent ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/minecraft-data",children:"minecraft-data"})," project,\nand accessed through ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/node-minecraft-data",children:"node-minecraft-data"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"minecraft-data",children:"minecraft-data"}),"\n",(0,i.jsxs)(n.p,{children:["The data is available in ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/node-minecraft-data",children:"node-minecraft-data"})," module"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"require('minecraft-data')(bot.version)"})," gives you access to it."]}),"\n",(0,i.jsx)(n.h3,{id:"mcdatablocks",children:"mcdata.blocks"}),"\n",(0,i.jsx)(n.p,{children:"blocks indexed by id"}),"\n",(0,i.jsx)(n.h3,{id:"mcdataitems",children:"mcdata.items"}),"\n",(0,i.jsx)(n.p,{children:"items indexed by id"}),"\n",(0,i.jsx)(n.h3,{id:"mcdatamaterials",children:"mcdata.materials"}),"\n",(0,i.jsx)(n.p,{children:"The key is the material. The value is an object with the key as the item id\nof the tool and the value as the efficiency multiplier."}),"\n",(0,i.jsx)(n.h3,{id:"mcdatarecipes",children:"mcdata.recipes"}),"\n",(0,i.jsx)(n.p,{children:"recipes indexed by id"}),"\n",(0,i.jsx)(n.h3,{id:"mcdatainstruments",children:"mcdata.instruments"}),"\n",(0,i.jsx)(n.p,{children:"instruments indexed by id"}),"\n",(0,i.jsx)(n.h3,{id:"mcdatabiomes",children:"mcdata.biomes"}),"\n",(0,i.jsx)(n.p,{children:"biomes indexed by id"}),"\n",(0,i.jsx)(n.h3,{id:"mcdataentities",children:"mcdata.entities"}),"\n",(0,i.jsx)(n.p,{children:"entities indexed by id"}),"\n",(0,i.jsx)(n.h2,{id:"classes",children:"Classes"}),"\n",(0,i.jsx)(n.h3,{id:"vec3",children:"vec3"}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://github.com/andrewrk/node-vec3",children:"andrewrk/node-vec3"})]}),"\n",(0,i.jsx)(n.p,{children:"All points in mineflayer are supplied as instances of this class."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"x - south"}),"\n",(0,i.jsx)(n.li,{children:"y - up"}),"\n",(0,i.jsx)(n.li,{children:"z - west"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Functions and methods which require a point argument accept ",(0,i.jsx)(n.code,{children:"Vec3"})," instances\nas well as an array with 3 values, and an object with ",(0,i.jsx)(n.code,{children:"x"}),", ",(0,i.jsx)(n.code,{children:"y"}),", and ",(0,i.jsx)(n.code,{children:"z"}),"\nproperties."]}),"\n",(0,i.jsx)(n.h3,{id:"mineflayerlocation",children:"mineflayer.Location"}),"\n",(0,i.jsx)(n.h3,{id:"entity",children:"Entity"}),"\n",(0,i.jsxs)(n.p,{children:["Entities represent players, mobs, and objects. They are emitted\nin many events, and you can access your own entity with ",(0,i.jsx)(n.code,{children:"bot.entity"}),".\nSee ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-entity",children:"prismarine-entity"})]}),"\n",(0,i.jsx)(n.h4,{id:"player-skin-data",children:"Player Skin Data"}),"\n",(0,i.jsxs)(n.p,{children:["The skin data is stored in the ",(0,i.jsx)(n.code,{children:"skinData"})," property of the player object, if present."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// player.skinData\n{\n  url: 'http://textures.minecraft.net/texture/...',\n  model: 'slim' // or 'classic'\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"block",children:"Block"}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-block",children:"prismarine-block"})]}),"\n",(0,i.jsxs)(n.p,{children:["Also ",(0,i.jsx)(n.code,{children:"block.blockEntity"})," is additional field with block entity data as ",(0,i.jsx)(n.code,{children:"Object"}),". The data in this varies between versions."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'// sign.blockEntity example from 1.19\n{\n  GlowingText: 0, // 0 for false, 1 for true\n  Color: \'black\',\n  Text1: \'{"text":"1"}\',\n  Text2: \'{"text":"2"}\',\n  Text3: \'{"text":"3"}\',\n  Text4: \'{"text":"4"}\'\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Note if you want to get a sign's plain text, you can use ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-block/blob/master/doc/API.md#sign",children:(0,i.jsx)(n.code,{children:"block.getSignText()"})})," instead of unstable blockEntity data."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'> block = bot.blockAt(new Vec3(0, 60, 0)) // assuming a sign is here\n> block.getSignText()\n[ "Front text\\nHello world", "Back text\\nHello world" ]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"biome",children:"Biome"}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-biome",children:"prismarine-biome"})]}),"\n",(0,i.jsx)(n.h3,{id:"item",children:"Item"}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-item",children:"prismarine-item"})]}),"\n",(0,i.jsx)(n.h3,{id:"windowswindow-base-class",children:"windows.Window (base class)"}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-windows",children:"prismarine-windows"})]}),"\n",(0,i.jsx)(n.h4,{id:"windowdeposititemtype-metadata-count-nbt",children:"window.deposit(itemType, metadata, count, nbt)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when done depositing."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"itemType"})," - numerical item id"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"metadata"})," - numerical value. ",(0,i.jsx)(n.code,{children:"null"})," means match anything."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"count"})," - how many to deposit. ",(0,i.jsx)(n.code,{children:"null"})," is an alias to 1."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"nbt"})," - match nbt data. ",(0,i.jsx)(n.code,{children:"null"})," is do not match nbt."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"windowwithdrawitemtype-metadata-count-nbt",children:"window.withdraw(itemType, metadata, count, nbt)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when done withdrawing. Throws and error if the bot has no free room in its inventory."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"itemType"})," - numerical item id"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"metadata"})," - numerical value. ",(0,i.jsx)(n.code,{children:"null"})," means match anything."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"count"})," - how many to withdraw. ",(0,i.jsx)(n.code,{children:"null"})," is an alias to 1."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"nbt"})," - match nbt data. ",(0,i.jsx)(n.code,{children:"null"})," is do not match nbt."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"windowclose",children:"window.close()"}),"\n",(0,i.jsx)(n.h3,{id:"recipe",children:"Recipe"}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-recipe",children:"prismarine-recipe"})]}),"\n",(0,i.jsx)(n.h3,{id:"mineflayercontainer",children:"mineflayer.Container"}),"\n",(0,i.jsxs)(n.p,{children:["Extends windows.Window for chests, dispensers, etc...\nSee ",(0,i.jsx)(n.code,{children:"bot.openContainer(chestBlock or minecartchestEntity)"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"mineflayerfurnace",children:"mineflayer.Furnace"}),"\n",(0,i.jsxs)(n.p,{children:["Extends windows.Window for furnace, smelter, etc...\nSee ",(0,i.jsx)(n.code,{children:"bot.openFurnace(furnaceBlock)"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"furnace-update",children:'furnace "update"'}),"\n",(0,i.jsxs)(n.p,{children:["Fires when ",(0,i.jsx)(n.code,{children:"furnace.fuel"})," and/or ",(0,i.jsx)(n.code,{children:"furnace.progress"})," update."]}),"\n",(0,i.jsx)(n.h4,{id:"furnacetakeinput",children:"furnace.takeInput()"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"item"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.h4,{id:"furnacetakefuel",children:"furnace.takeFuel()"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"item"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.h4,{id:"furnacetakeoutput",children:"furnace.takeOutput()"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"item"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.h4,{id:"furnaceputinputitemtype-metadata-count",children:"furnace.putInput(itemType, metadata, count)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.h4,{id:"furnaceputfuelitemtype-metadata-count",children:"furnace.putFuel(itemType, metadata, count)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.h4,{id:"furnaceinputitem",children:"furnace.inputItem()"}),"\n",(0,i.jsxs)(n.p,{children:["Returns ",(0,i.jsx)(n.code,{children:"Item"})," instance which is the input."]}),"\n",(0,i.jsx)(n.h4,{id:"furnacefuelitem",children:"furnace.fuelItem()"}),"\n",(0,i.jsxs)(n.p,{children:["Returns ",(0,i.jsx)(n.code,{children:"Item"})," instance which is the fuel."]}),"\n",(0,i.jsx)(n.h4,{id:"furnaceoutputitem",children:"furnace.outputItem()"}),"\n",(0,i.jsxs)(n.p,{children:["Returns ",(0,i.jsx)(n.code,{children:"Item"})," instance which is the output."]}),"\n",(0,i.jsx)(n.h4,{id:"furnacefuel",children:"furnace.fuel"}),"\n",(0,i.jsx)(n.p,{children:"How much fuel is left between 0 and 1."}),"\n",(0,i.jsx)(n.h4,{id:"furnaceprogress",children:"furnace.progress"}),"\n",(0,i.jsx)(n.p,{children:"How much cooked the input is between 0 and 1."}),"\n",(0,i.jsx)(n.h3,{id:"mineflayerenchantmenttable",children:"mineflayer.EnchantmentTable"}),"\n",(0,i.jsxs)(n.p,{children:["Extends windows.Window for enchantment tables\nSee ",(0,i.jsx)(n.code,{children:"bot.openEnchantmentTable(enchantmentTableBlock)"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"enchantmenttable-ready",children:'enchantmentTable "ready"'}),"\n",(0,i.jsxs)(n.p,{children:["Fires when ",(0,i.jsx)(n.code,{children:"enchantmentTable.enchantments"})," is fully populated and you\nmay make a selection by calling ",(0,i.jsx)(n.code,{children:"enchantmentTable.enchant(choice)"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"enchantmenttabletargetitem",children:"enchantmentTable.targetItem()"}),"\n",(0,i.jsx)(n.p,{children:"Gets the target item. This is both the input and the output of the\nenchantment table."}),"\n",(0,i.jsx)(n.h4,{id:"enchantmenttablexpseed",children:"enchantmentTable.xpseed"}),"\n",(0,i.jsx)(n.p,{children:"The 16 bits xpseed sent by the server."}),"\n",(0,i.jsx)(n.h4,{id:"enchantmenttableenchantments",children:"enchantmentTable.enchantments"}),"\n",(0,i.jsxs)(n.p,{children:["Array of length 3 which are the 3 enchantments to choose from.\n",(0,i.jsx)(n.code,{children:"level"})," can be ",(0,i.jsx)(n.code,{children:"-1"})," if the server has not sent the data yet."]}),"\n",(0,i.jsx)(n.p,{children:"Looks like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"[\n  {\n    level: 3\n  },\n  {\n    level: 4\n  },\n  {\n    level: 9\n  }\n]\n"})}),"\n",(0,i.jsx)(n.h4,{id:"enchantmenttableenchantchoice",children:"enchantmentTable.enchant(choice)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"item"})," as its argument when the item has been enchanted."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"choice"})," - [0-2], the index of the enchantment you want to pick."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"enchantmenttabletaketargetitem",children:"enchantmentTable.takeTargetItem()"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"item"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.h4,{id:"enchantmenttableputtargetitemitem",children:"enchantmentTable.putTargetItem(item)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.h4,{id:"enchantmenttableputlapisitem",children:"enchantmentTable.putLapis(item)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.h3,{id:"mineflayeranvil",children:"mineflayer.anvil"}),"\n",(0,i.jsxs)(n.p,{children:["Extends windows.Window for anvils\nSee ",(0,i.jsx)(n.code,{children:"bot.openAnvil(anvilBlock)"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"anvilcombineitemone-itemtwo-name",children:"anvil.combine(itemOne, itemTwo[, name])"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.h4,{id:"anvilcombineitem-name",children:"anvil.combine(item[, name])"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.h4,{id:"villager-ready",children:'villager "ready"'}),"\n",(0,i.jsxs)(n.p,{children:["Fires when ",(0,i.jsx)(n.code,{children:"villager.trades"})," is loaded."]}),"\n",(0,i.jsx)(n.h4,{id:"villagertrades",children:"villager.trades"}),"\n",(0,i.jsx)(n.p,{children:"Array of trades."}),"\n",(0,i.jsx)(n.p,{children:"Looks like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"[\n  {\n    firstInput: Item,\n    output: Item,\n    hasSecondItem: false,\n    secondaryInput: null,\n    disabled: false,\n    tooluses: 0,\n    maxTradeuses: 7\n  },\n  {\n    firstInput: Item,\n    output: Item,\n    hasSecondItem: false,\n    secondaryInput: null,\n    disabled: false,\n    tooluses: 0,\n    maxTradeuses: 7\n  },\n  {\n    firstInput: Item,\n    output: Item,\n    hasSecondItem: true,\n    secondaryInput: Item,\n    disabled: false,\n    tooluses: 0,\n    maxTradeuses: 7\n  }\n]\n"})}),"\n",(0,i.jsx)(n.h4,{id:"villagertradetradeindex-times",children:"villager.trade(tradeIndex, [times])"}),"\n",(0,i.jsxs)(n.p,{children:["Is the same as ",(0,i.jsx)(n.a,{href:"#bottradevillagerinstance-tradeindex-times",children:"bot.trade(villagerInstance, tradeIndex, [times])"})]}),"\n",(0,i.jsx)(n.h3,{id:"mineflayerscoreboard",children:"mineflayer.ScoreBoard"}),"\n",(0,i.jsx)(n.h4,{id:"scoreboardname",children:"ScoreBoard.name"}),"\n",(0,i.jsx)(n.p,{children:"Name of the scoreboard."}),"\n",(0,i.jsx)(n.h4,{id:"scoreboardtitle",children:"ScoreBoard.title"}),"\n",(0,i.jsx)(n.p,{children:"The title of the scoreboard (does not always equal the name)"}),"\n",(0,i.jsx)(n.h4,{id:"scoreboarditemsmap",children:"ScoreBoard.itemsMap"}),"\n",(0,i.jsx)(n.p,{children:"An object with all items in the scoreboard in it"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"{\n  wvffle: { name: 'wvffle', value: 3 },\n  dzikoysk: { name: 'dzikoysk', value: 6 }\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"scoreboarditems",children:"ScoreBoard.items"}),"\n",(0,i.jsx)(n.p,{children:"An array with all sorted items in the scoreboard in it"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"[\n  { name: 'dzikoysk', value: 6 },\n  { name: 'wvffle', value: 3 }\n]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"mineflayerteam",children:"mineflayer.Team"}),"\n",(0,i.jsx)(n.h4,{id:"teamname",children:"Team.name"}),"\n",(0,i.jsx)(n.p,{children:"Name of the team"}),"\n",(0,i.jsx)(n.h4,{id:"teamfriendlyfire",children:"Team.friendlyFire"}),"\n",(0,i.jsx)(n.h4,{id:"teamnametagvisibility",children:"Team.nameTagVisibility"}),"\n",(0,i.jsxs)(n.p,{children:["One of ",(0,i.jsx)(n.code,{children:"always"}),", ",(0,i.jsx)(n.code,{children:"hideForOtherTeams"}),", ",(0,i.jsx)(n.code,{children:"hideForOwnTeam"})]}),"\n",(0,i.jsx)(n.h4,{id:"teamcollisionrule",children:"Team.collisionRule"}),"\n",(0,i.jsxs)(n.p,{children:["One of ",(0,i.jsx)(n.code,{children:"always"}),", ",(0,i.jsx)(n.code,{children:"pushOtherTeams"}),", ",(0,i.jsx)(n.code,{children:"pushOwnTeam"})]}),"\n",(0,i.jsx)(n.h4,{id:"teamcolor",children:"Team.color"}),"\n",(0,i.jsxs)(n.p,{children:["Color (or formatting) name of team, e.g. ",(0,i.jsx)(n.code,{children:"dark_green"}),", ",(0,i.jsx)(n.code,{children:"red"}),", ",(0,i.jsx)(n.code,{children:"underlined"})]}),"\n",(0,i.jsx)(n.h4,{id:"teamprefix",children:"Team.prefix"}),"\n",(0,i.jsx)(n.p,{children:"A chat component containing team prefix"}),"\n",(0,i.jsx)(n.h4,{id:"teamsuffix",children:"Team.suffix"}),"\n",(0,i.jsx)(n.p,{children:"A chat component containing team suffix"}),"\n",(0,i.jsx)(n.h4,{id:"teammembers",children:"Team.members"}),"\n",(0,i.jsx)(n.p,{children:"Array of team members. Usernames for players and UUIDs for other entities."}),"\n",(0,i.jsx)(n.h3,{id:"mineflayerbossbar",children:"mineflayer.BossBar"}),"\n",(0,i.jsx)(n.h4,{id:"bossbartitle",children:"BossBar.title"}),"\n",(0,i.jsx)(n.p,{children:"Title of boss bar, instance of ChatMessage"}),"\n",(0,i.jsx)(n.h4,{id:"bossbarhealth",children:"BossBar.health"}),"\n",(0,i.jsxs)(n.p,{children:["Percent of boss health, from ",(0,i.jsx)(n.code,{children:"0"})," to ",(0,i.jsx)(n.code,{children:"1"})]}),"\n",(0,i.jsx)(n.h4,{id:"bossbardividers",children:"BossBar.dividers"}),"\n",(0,i.jsxs)(n.p,{children:["Number of boss bar dividers, one of ",(0,i.jsx)(n.code,{children:"0"}),", ",(0,i.jsx)(n.code,{children:"6"}),", ",(0,i.jsx)(n.code,{children:"10"}),", ",(0,i.jsx)(n.code,{children:"12"}),", ",(0,i.jsx)(n.code,{children:"20"})]}),"\n",(0,i.jsx)(n.h4,{id:"bossbarentityuuid",children:"BossBar.entityUUID"}),"\n",(0,i.jsx)(n.p,{children:"Boss bar entity uuid"}),"\n",(0,i.jsx)(n.h4,{id:"bossbarshoulddarkensky",children:"BossBar.shouldDarkenSky"}),"\n",(0,i.jsx)(n.p,{children:"Determines whether or not to darken the sky"}),"\n",(0,i.jsx)(n.h4,{id:"bossbarisdragonbar",children:"BossBar.isDragonBar"}),"\n",(0,i.jsx)(n.p,{children:"Determines whether or not boss bar is dragon bar"}),"\n",(0,i.jsx)(n.h4,{id:"bossbarcreatefog",children:"BossBar.createFog"}),"\n",(0,i.jsx)(n.p,{children:"Determines whether or not boss bar creates fog"}),"\n",(0,i.jsx)(n.h4,{id:"bossbarcolor",children:"BossBar.color"}),"\n",(0,i.jsxs)(n.p,{children:["Determines what color the boss bar color is, one of ",(0,i.jsx)(n.code,{children:"pink"}),", ",(0,i.jsx)(n.code,{children:"blue"}),", ",(0,i.jsx)(n.code,{children:"red"}),", ",(0,i.jsx)(n.code,{children:"green"}),", ",(0,i.jsx)(n.code,{children:"yellow"}),", ",(0,i.jsx)(n.code,{children:"purple"}),", ",(0,i.jsx)(n.code,{children:"white"})]}),"\n",(0,i.jsx)(n.h3,{id:"mineflayerparticle",children:"mineflayer.Particle"}),"\n",(0,i.jsx)(n.h4,{id:"particleid",children:"Particle.id"}),"\n",(0,i.jsxs)(n.p,{children:["Particle ID, as defined in the ",(0,i.jsx)(n.a,{href:"https://wiki.vg/Protocol#Particle",children:"protocol"})]}),"\n",(0,i.jsx)(n.h4,{id:"particlename",children:"Particle.name"}),"\n",(0,i.jsxs)(n.p,{children:["Particle Name, as defined in the ",(0,i.jsx)(n.a,{href:"https://wiki.vg/Protocol#Particle",children:"protocol"})]}),"\n",(0,i.jsx)(n.h4,{id:"particleposition",children:"Particle.position"}),"\n",(0,i.jsx)(n.p,{children:"Vec3 instance of where the particle was created"}),"\n",(0,i.jsx)(n.h4,{id:"particleoffset",children:"Particle.offset"}),"\n",(0,i.jsx)(n.p,{children:"Vec3 instance of the particle's offset"}),"\n",(0,i.jsx)(n.h4,{id:"particlelongdistancerender",children:"Particle.longDistanceRender"}),"\n",(0,i.jsx)(n.p,{children:"Determines whether or not to force the rendering of a particle despite client particle settings and increases maximum view distance from 256 to 65536"}),"\n",(0,i.jsx)(n.h4,{id:"particlecount",children:"Particle.count"}),"\n",(0,i.jsx)(n.p,{children:"Amount of particles created"}),"\n",(0,i.jsx)(n.h4,{id:"particlemovementspeed",children:"Particle.movementSpeed"}),"\n",(0,i.jsx)(n.p,{children:"Particle speed in a random direction"}),"\n",(0,i.jsx)(n.h2,{id:"bot",children:"Bot"}),"\n",(0,i.jsx)(n.h3,{id:"mineflayercreatebotoptions",children:"mineflayer.createBot(options)"}),"\n",(0,i.jsxs)(n.p,{children:["Create and return an instance of the class bot.\n",(0,i.jsx)(n.code,{children:"options"})," is an object containing the optional properties :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"username : default to 'Player'"}),"\n",(0,i.jsx)(n.li,{children:"port : default to 25565"}),"\n",(0,i.jsx)(n.li,{children:"password : can be omitted (if the tokens are also omitted then it tries to connect in offline mode)"}),"\n",(0,i.jsx)(n.li,{children:"host : default to localhost"}),"\n",(0,i.jsx)(n.li,{children:'version : default to automatically guessing the version of the server. Example of value : "1.12.2"'}),"\n",(0,i.jsx)(n.li,{children:"auth : default to 'mojang', can also be 'microsoft'"}),"\n",(0,i.jsx)(n.li,{children:"clientToken : generated if a password is given"}),"\n",(0,i.jsx)(n.li,{children:"accessToken : generated if a password is given"}),"\n",(0,i.jsx)(n.li,{children:"logErrors : true by default, catch errors and log them"}),"\n",(0,i.jsx)(n.li,{children:"hideErrors : true by default, do not log errors (even if logErrors is true)"}),"\n",(0,i.jsx)(n.li,{children:"keepAlive : send keep alive packets : default to true"}),"\n",(0,i.jsxs)(n.li,{children:["checkTimeoutInterval : default to ",(0,i.jsx)(n.code,{children:"30*1000"})," (30s), check if keepalive received at that period, disconnect otherwise."]}),"\n",(0,i.jsx)(n.li,{children:"loadInternalPlugins : defaults to true"}),"\n",(0,i.jsx)(n.li,{children:"storageBuilder : an optional function, takes as argument version and worldName and return an instance of something with the same API as prismarine-provider-anvil. Will be used to save the world."}),"\n",(0,i.jsx)(n.li,{children:"client : an instance of node-minecraft-protocol, if not specified, mineflayer makes it's own client. This can be used to enable using mineflayer through a proxy of many clients or a vanilla client and a mineflayer client."}),"\n",(0,i.jsx)(n.li,{children:"brand : the brand name for the client to use. Defaults to vanilla. Can be used to simulate custom clients for servers that require it."}),"\n",(0,i.jsx)(n.li,{children:"respawn : when set to false disables bot from automatically respawning, defaults to true."}),"\n",(0,i.jsxs)(n.li,{children:["plugins : object : defaults to ","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["pluginName : false : don't load internal plugin with given name ie. ",(0,i.jsx)(n.code,{children:"pluginName"})]}),"\n",(0,i.jsxs)(n.li,{children:["pluginName : true : load internal plugin with given name ie. ",(0,i.jsx)(n.code,{children:"pluginName"})," even though loadInternalplugins is set to false"]}),"\n",(0,i.jsxs)(n.li,{children:["pluginName : external plugin inject function : loads external plugin, overrides internal plugin with given name ie. ",(0,i.jsx)(n.code,{children:"pluginName"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"physicsEnabled : true by default, should the bot be affected by physics? can later be modified via bot.physicsEnabled"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bot.settings.chat",children:"chat"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bot.settings.colorsEnabled",children:"colorsEnabled"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bot.settings.viewDistance",children:"viewDistance"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bot.settings.difficulty",children:"difficulty"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bot.settings.skinParts",children:"skinParts"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bot.settings.enableTextFiltering",children:"enableTextFiltering"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#bot.settings.enableServerListing",children:"enableServerListing"})}),"\n",(0,i.jsx)(n.li,{children:"chatLengthLimit : the maximum amount of characters that can be sent in a single message. If this is not set, it will be 100 in < 1.11 and 256 in >= 1.11."}),"\n",(0,i.jsx)(n.li,{children:"defaultChatPatterns: defaults to true, set to false to not add the patterns such as chat and whisper"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h4,{id:"botregistry",children:"bot.registry"}),"\n",(0,i.jsx)(n.p,{children:"Instance of minecraft-data used by the bot. Pass this to constructors that expect an instance of minecraft-data, such as prismarine-block."}),"\n",(0,i.jsx)(n.h4,{id:"botworld",children:"bot.world"}),"\n",(0,i.jsxs)(n.p,{children:["A sync representation of the world. Check the doc at ",(0,i.jsx)(n.a,{href:"http://github.com/PrismarineJS/prismarine-world",children:"http://github.com/PrismarineJS/prismarine-world"})]}),"\n",(0,i.jsx)(n.h5,{id:"world-blockupdate-oldblock-newblock",children:'world "blockUpdate" (oldBlock, newBlock)'}),"\n",(0,i.jsxs)(n.p,{children:["Fires when a block updates. Both ",(0,i.jsx)(n.code,{children:"oldBlock"})," and ",(0,i.jsx)(n.code,{children:"newBlock"})," provided for\ncomparison.\n",(0,i.jsx)(n.code,{children:"oldBlock"})," may be ",(0,i.jsx)(n.code,{children:"null"})," with normal block updates."]}),"\n",(0,i.jsx)(n.h5,{id:"world-blockupdatex-y-z-oldblock-newblock",children:'world "blockUpdate:(x, y, z)" (oldBlock, newBlock)'}),"\n",(0,i.jsxs)(n.p,{children:["Fires for a specific point. Both ",(0,i.jsx)(n.code,{children:"oldBlock"})," and ",(0,i.jsx)(n.code,{children:"newBlock"})," provided for\ncomparison. All listeners receive null for ",(0,i.jsx)(n.code,{children:"oldBlock"})," and ",(0,i.jsx)(n.code,{children:"newBlock"})," and get automatically removed when the world is unloaded.\n",(0,i.jsx)(n.code,{children:"oldBlock"})," may be ",(0,i.jsx)(n.code,{children:"null"})," with normal block updates."]}),"\n",(0,i.jsx)(n.h4,{id:"botentity",children:"bot.entity"}),"\n",(0,i.jsxs)(n.p,{children:["Your own entity. See ",(0,i.jsx)(n.code,{children:"Entity"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botentities",children:"bot.entities"}),"\n",(0,i.jsx)(n.p,{children:"All nearby entities. This object is a map of entityId to entity."}),"\n",(0,i.jsx)(n.h4,{id:"botusername",children:"bot.username"}),"\n",(0,i.jsx)(n.p,{children:"Use this to find out your own name."}),"\n",(0,i.jsx)(n.h4,{id:"botspawnpoint",children:"bot.spawnPoint"}),"\n",(0,i.jsx)(n.p,{children:"Coordinates to the main spawn point, where all compasses point to."}),"\n",(0,i.jsx)(n.h4,{id:"bothelditem",children:"bot.heldItem"}),"\n",(0,i.jsxs)(n.p,{children:["The item in the bot's hand, represented as a ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-item",children:"prismarine-item"})," instance specified with arbitrary metadata, nbtdata, etc."]}),"\n",(0,i.jsx)(n.h4,{id:"botusinghelditem",children:"bot.usingHeldItem"}),"\n",(0,i.jsx)(n.p,{children:"Whether the bot is using the item that it's holding, for example eating food or using a shield."}),"\n",(0,i.jsx)(n.h4,{id:"botgameleveltype",children:"bot.game.levelType"}),"\n",(0,i.jsx)(n.h4,{id:"botgamedimension",children:"bot.game.dimension"}),"\n",(0,i.jsxs)(n.p,{children:["The bot's current dimension, such as ",(0,i.jsx)(n.code,{children:"overworld"}),", ",(0,i.jsx)(n.code,{children:"the_end"})," or ",(0,i.jsx)(n.code,{children:"the_nether"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botgamedifficulty",children:"bot.game.difficulty"}),"\n",(0,i.jsx)(n.h4,{id:"botgamegamemode",children:"bot.game.gameMode"}),"\n",(0,i.jsx)(n.h4,{id:"botgamehardcore",children:"bot.game.hardcore"}),"\n",(0,i.jsx)(n.h4,{id:"botgamemaxplayers",children:"bot.game.maxPlayers"}),"\n",(0,i.jsx)(n.h4,{id:"botgameserverbrand",children:"bot.game.serverBrand"}),"\n",(0,i.jsx)(n.h4,{id:"botgameminy",children:"bot.game.minY"}),"\n",(0,i.jsx)(n.p,{children:"minimum y of the world"}),"\n",(0,i.jsx)(n.h4,{id:"botgameheight",children:"bot.game.height"}),"\n",(0,i.jsx)(n.p,{children:"world height"}),"\n",(0,i.jsx)(n.h4,{id:"botphysicsenabled",children:"bot.physicsEnabled"}),"\n",(0,i.jsx)(n.p,{children:"Enable physics, default true."}),"\n",(0,i.jsx)(n.h4,{id:"botplayer",children:"bot.player"}),"\n",(0,i.jsx)(n.p,{children:"Bot's player object"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"{\n  username: 'player',\n  displayName: { toString: Function }, // ChatMessage object.\n  gamemode: 0,\n  ping: 28,\n  entity: entity // null if you are too far away\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"A player's ping starts at 0, you might have to wait a bit for the server to send their actual ping."}),"\n",(0,i.jsx)(n.h4,{id:"botplayers",children:"bot.players"}),"\n",(0,i.jsx)(n.p,{children:"Map of username to people playing the game."}),"\n",(0,i.jsx)(n.h4,{id:"bottablist",children:"bot.tablist"}),"\n",(0,i.jsxs)(n.p,{children:["bot's tablist object has two keys, ",(0,i.jsx)(n.code,{children:"header"})," and ",(0,i.jsx)(n.code,{children:"footer"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"{\n  header: { toString: Function }, // ChatMessage object.\n  footer: { toString: Function } // ChatMessage object.\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"botisraining",children:"bot.isRaining"}),"\n",(0,i.jsx)(n.h4,{id:"botrainstate",children:"bot.rainState"}),"\n",(0,i.jsx)(n.p,{children:"A number indicating the current rain level. When it isn't raining, this\nwill be equal to 0. When it starts to rain, this value will increase\ngradually up to 1. When it stops raining, this value gradually decreases back to 0."}),"\n",(0,i.jsxs)(n.p,{children:["Each time ",(0,i.jsx)(n.code,{children:"bot.rainState"}),' is changed, the "weatherUpdate" event is emitted.']}),"\n",(0,i.jsx)(n.h4,{id:"botthunderstate",children:"bot.thunderState"}),"\n",(0,i.jsx)(n.p,{children:"A number indicating the current thunder level. When there isn't a thunderstorm, this\nwill be equal to 0. When a thunderstorm starts, this value will increase\ngradually up to 1. When the thunderstorm stops, this value gradually decreases back to 0."}),"\n",(0,i.jsxs)(n.p,{children:["Each time ",(0,i.jsx)(n.code,{children:"bot.thunderState"}),' is changed, the "weatherUpdate" event is emitted.']}),"\n",(0,i.jsxs)(n.p,{children:["This is the same as ",(0,i.jsx)(n.code,{children:"bot.rainState"}),", but for thunderstorms.\nFor thunderstorms, both ",(0,i.jsx)(n.code,{children:"bot.rainState"})," and ",(0,i.jsx)(n.code,{children:"bot.thunderState"})," will change."]}),"\n",(0,i.jsx)(n.h4,{id:"botchatpatterns",children:"bot.chatPatterns"}),"\n",(0,i.jsxs)(n.p,{children:["This is an array of pattern objects, of the following format: ",(0,i.jsx)(n.code,{children:'{ /regex/, "chattype", "description")'})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"/regex/ - a regular expression pattern, that should have at least two capture groups"}),"\n",(0,i.jsx)(n.li,{children:'\'chattype\' - the type of chat the pattern matches, ex "chat" or "whisper", but can be anything.'}),"\n",(0,i.jsx)(n.li,{children:"'description' - description of what the pattern is for, optional."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botsettingschat",children:"bot.settings.chat"}),"\n",(0,i.jsx)(n.p,{children:"Choices:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabled"})," (default)"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"commandsOnly"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"disabled"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botsettingscolorsenabled",children:"bot.settings.colorsEnabled"}),"\n",(0,i.jsx)(n.p,{children:"Default true, whether or not you receive color codes in chats from the server."}),"\n",(0,i.jsx)(n.h4,{id:"botsettingsviewdistance",children:"bot.settings.viewDistance"}),"\n",(0,i.jsx)(n.p,{children:"Can be a string listed below or a postive number.\nChoices:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"far"})," (default)"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"normal"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"short"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"tiny"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botsettingsdifficulty",children:"bot.settings.difficulty"}),"\n",(0,i.jsx)(n.p,{children:"Same as from server.properties."}),"\n",(0,i.jsx)(n.h4,{id:"botsettingsskinparts",children:"bot.settings.skinParts"}),"\n",(0,i.jsx)(n.p,{children:"These boolean Settings control if extra Skin Details on the own players' skin should be visible"}),"\n",(0,i.jsx)(n.h5,{id:"botsettingsskinpartsshowcape---boolean",children:"bot.settings.skinParts.showCape - boolean"}),"\n",(0,i.jsx)(n.p,{children:"If you have a cape you can turn it off by setting this to false."}),"\n",(0,i.jsx)(n.h5,{id:"botsettingsskinpartsshowjacket---boolean",children:"bot.settings.skinParts.showJacket - boolean"}),"\n",(0,i.jsx)(n.h5,{id:"botsettingsskinpartsshowleftsleeve---boolean",children:"bot.settings.skinParts.showLeftSleeve - boolean"}),"\n",(0,i.jsx)(n.h5,{id:"botsettingsskinpartsshowrightsleeve---boolean",children:"bot.settings.skinParts.showRightSleeve - boolean"}),"\n",(0,i.jsx)(n.h5,{id:"botsettingsskinpartsshowleftpants---boolean",children:"bot.settings.skinParts.showLeftPants - boolean"}),"\n",(0,i.jsx)(n.h5,{id:"botsettingsskinpartsshowrightpants---boolean",children:"bot.settings.skinParts.showRightPants - boolean"}),"\n",(0,i.jsx)(n.h5,{id:"botsettingsskinpartsshowhat---boolean",children:"bot.settings.skinParts.showHat - boolean"}),"\n",(0,i.jsx)(n.h4,{id:"botsettingsenabletextfiltering---boolean",children:"bot.settings.enableTextFiltering - boolean"}),"\n",(0,i.jsx)(n.p,{children:"Unused, defaults to false in Notchian (Vanilla) client."}),"\n",(0,i.jsx)(n.h4,{id:"botsettingsenableserverlisting---boolean",children:"bot.settings.enableServerListing - boolean"}),"\n",(0,i.jsx)(n.p,{children:"This setting is sent to the server to determine whether the player should show up in server listings"}),"\n",(0,i.jsx)(n.h4,{id:"botexperiencelevel",children:"bot.experience.level"}),"\n",(0,i.jsx)(n.h4,{id:"botexperiencepoints",children:"bot.experience.points"}),"\n",(0,i.jsx)(n.p,{children:"Total experience points."}),"\n",(0,i.jsx)(n.h4,{id:"botexperienceprogress",children:"bot.experience.progress"}),"\n",(0,i.jsx)(n.p,{children:"Between 0 and 1 - amount to get to the next level."}),"\n",(0,i.jsx)(n.h4,{id:"bothealth",children:"bot.health"}),"\n",(0,i.jsx)(n.p,{children:"Number in the range [0, 20] representing the number of half-hearts."}),"\n",(0,i.jsx)(n.h4,{id:"botfood",children:"bot.food"}),"\n",(0,i.jsx)(n.p,{children:"Number in the range [0, 20] representing the number of half-turkey-legs."}),"\n",(0,i.jsx)(n.h4,{id:"botfoodsaturation",children:"bot.foodSaturation"}),"\n",(0,i.jsx)(n.p,{children:'Food saturation acts as a food "overcharge". Food values will not decrease\nwhile the saturation is over zero. Players logging in automatically get a\nsaturation of 5.0. Eating food increases the saturation as well as the food bar.'}),"\n",(0,i.jsx)(n.h4,{id:"botoxygenlevel",children:"bot.oxygenLevel"}),"\n",(0,i.jsx)(n.p,{children:"Number in the range [0, 20] respresenting the number of water-icons known as oxygen level."}),"\n",(0,i.jsx)(n.h4,{id:"botphysics",children:"bot.physics"}),"\n",(0,i.jsx)(n.p,{children:"Edit these numbers to tweak gravity, jump speed, terminal velocity, etc.\nDo this at your own risk."}),"\n",(0,i.jsx)(n.h4,{id:"botfireworkrocketduration",children:"bot.fireworkRocketDuration"}),"\n",(0,i.jsx)(n.p,{children:"How many physics ticks worth of firework rocket boost are left."}),"\n",(0,i.jsx)(n.h4,{id:"botsimpleclickleftmouse-slot",children:"bot.simpleClick.leftMouse (slot)"}),"\n",(0,i.jsxs)(n.p,{children:["abstraction over ",(0,i.jsx)(n.code,{children:"bot.clickWindow(slot, 0, 0)"})]}),"\n",(0,i.jsx)(n.h4,{id:"botsimpleclickrightmouse-slot",children:"bot.simpleClick.rightMouse (slot)"}),"\n",(0,i.jsxs)(n.p,{children:["abstraction over ",(0,i.jsx)(n.code,{children:"bot.clickWindow(slot, 1, 0)"})]}),"\n",(0,i.jsx)(n.h4,{id:"bottimedodaylightcycle",children:"bot.time.doDaylightCycle"}),"\n",(0,i.jsx)(n.p,{children:"Whether or not the gamerule doDaylightCycle is true or false."}),"\n",(0,i.jsx)(n.h4,{id:"bottimebigtime",children:"bot.time.bigTime"}),"\n",(0,i.jsx)(n.p,{children:"The total number of ticks since day 0."}),"\n",(0,i.jsx)(n.p,{children:"This value is of type BigInt and is accurate even at very large values. (more than 2^51 - 1 ticks)"}),"\n",(0,i.jsx)(n.h4,{id:"bottimetime",children:"bot.time.time"}),"\n",(0,i.jsx)(n.p,{children:"The total numbers of ticks since day 0."}),"\n",(0,i.jsx)(n.p,{children:"Because the Number limit of Javascript is at 2^51 - 1 bot.time.time becomes inaccurate higher than this limit and the use of bot.time.bigTime is recommended.\nRealistically though you'll probably never need to use bot.time.bigTime as it will only reach 2^51 - 1 ticks naturally after ~14280821 real years."}),"\n",(0,i.jsx)(n.h4,{id:"bottimetimeofday",children:"bot.time.timeOfDay"}),"\n",(0,i.jsx)(n.p,{children:"Time of the day, in ticks."}),"\n",(0,i.jsx)(n.p,{children:"Time is based on ticks, where 20 ticks happen every second. There are 24000\nticks in a day, making Minecraft days exactly 20 minutes long."}),"\n",(0,i.jsx)(n.p,{children:"The time of day is based on the timestamp modulo 24000. 0 is sunrise, 6000\nis noon, 12000 is sunset, and 18000 is midnight."}),"\n",(0,i.jsx)(n.h4,{id:"bottimeday",children:"bot.time.day"}),"\n",(0,i.jsx)(n.p,{children:"Day of the world."}),"\n",(0,i.jsx)(n.h4,{id:"bottimeisday",children:"bot.time.isDay"}),"\n",(0,i.jsx)(n.p,{children:"Whether it is day or not."}),"\n",(0,i.jsx)(n.p,{children:"Based on whether the current time of day is between 13000 and 23000 ticks."}),"\n",(0,i.jsx)(n.h4,{id:"bottimemoonphase",children:"bot.time.moonPhase"}),"\n",(0,i.jsx)(n.p,{children:"Phase of the moon."}),"\n",(0,i.jsx)(n.p,{children:"0-7 where 0 is full moon."}),"\n",(0,i.jsx)(n.h4,{id:"bottimebigage",children:"bot.time.bigAge"}),"\n",(0,i.jsx)(n.p,{children:"Age of the world, in ticks."}),"\n",(0,i.jsx)(n.p,{children:"This value is of type BigInt and is accurate even at very large values. (more than 2^51 - 1 ticks)"}),"\n",(0,i.jsx)(n.h4,{id:"bottimeage",children:"bot.time.age"}),"\n",(0,i.jsx)(n.p,{children:"Age of the world, in ticks."}),"\n",(0,i.jsx)(n.p,{children:"Because the Number limit of Javascript is at 2^51 - 1 bot.time.age becomes inaccurate higher than this limit and the use of bot.time.bigAge is recommended.\nRealistically though you'll probably never need to use bot.time.bigAge as it will only reach 2^51 - 1 ticks naturally after ~14280821 real years."}),"\n",(0,i.jsx)(n.h4,{id:"botquickbarslot",children:"bot.quickBarSlot"}),"\n",(0,i.jsx)(n.p,{children:"Which quick bar slot is selected (0 - 8)."}),"\n",(0,i.jsx)(n.h4,{id:"botinventory",children:"bot.inventory"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-windows#windowswindow-base-class",children:(0,i.jsx)(n.code,{children:"Window"})})," instance representing your inventory."]}),"\n",(0,i.jsx)(n.h4,{id:"bottargetdigblock",children:"bot.targetDigBlock"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"block"})," that you are currently digging, or ",(0,i.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botissleeping",children:"bot.isSleeping"}),"\n",(0,i.jsx)(n.p,{children:"Boolean, whether or not you are in bed."}),"\n",(0,i.jsx)(n.h4,{id:"botscoreboards",children:"bot.scoreboards"}),"\n",(0,i.jsx)(n.p,{children:"All scoreboards known to the bot in an object scoreboard name -> scoreboard."}),"\n",(0,i.jsx)(n.h4,{id:"botscoreboard",children:"bot.scoreboard"}),"\n",(0,i.jsx)(n.p,{children:"All scoreboards known to the bot in an object scoreboard displaySlot -> scoreboard."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"belowName"})," - scoreboard placed in belowName"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sidebar"})," - scoreboard placed in sidebar"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"list"})," - scoreboard placed in list"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0-18"})," - slots defined in ",(0,i.jsx)(n.a,{href:"https://wiki.vg/Protocol#Display_Scoreboard",children:"protocol"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botteams",children:"bot.teams"}),"\n",(0,i.jsx)(n.p,{children:"All teams known to the bot"}),"\n",(0,i.jsx)(n.h4,{id:"botteammap",children:"bot.teamMap"}),"\n",(0,i.jsx)(n.p,{children:"Mapping of member to team. Uses usernames for players and UUIDs for entities."}),"\n",(0,i.jsx)(n.h4,{id:"botcontrolstate",children:"bot.controlState"}),"\n",(0,i.jsx)(n.p,{children:"An object whose keys are the main control states: ['forward', 'back', 'left', 'right', 'jump', 'sprint', 'sneak']."}),"\n",(0,i.jsxs)(n.p,{children:["Setting values for this object internally calls ",(0,i.jsx)(n.a,{href:"#botsetcontrolstatecontrol-state",children:"bot.setControlState"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,i.jsx)(n.h4,{id:"chat-username-message-translate-jsonmsg-matches",children:'"chat" (username, message, translate, jsonMsg, matches)'}),"\n",(0,i.jsx)(n.p,{children:"Only emitted when a player chats publicly."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"username"})," - who said the message (compare with ",(0,i.jsx)(n.code,{children:"bot.username"})," to ignore your own chat)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"message"})," - stripped of all color and control characters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"translate"})," - chat message type. Null for most bukkit chat messages"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"jsonMsg"})," - unmodified JSON message from the server"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"matches"})," - array of returned matches from regular expressions. May be null"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"whisper-username-message-translate-jsonmsg-matches",children:'"whisper" (username, message, translate, jsonMsg, matches)'}),"\n",(0,i.jsx)(n.p,{children:"Only emitted when a player chats to you privately."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"username"})," - who said the message"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"message"})," - stripped of all color and control characters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"translate"})," - chat message type. Null for most bukkit chat messages"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"jsonMsg"})," - unmodified JSON message from the server"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"matches"})," - array of returned matches from regular expressions. May be null"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"actionbar-jsonmsg-verified",children:'"actionBar" (jsonMsg, verified)'}),"\n",(0,i.jsx)(n.p,{children:"Emitted for every server message which appears on the Action Bar."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"jsonMsg"})," - unmodified JSON message from the server"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"verified"})," -> null if non signed, true if signed and correct, false if signed and incorrect"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"message-jsonmsg-position-sender-verified",children:'"message" (jsonMsg, position, sender, verified)'}),"\n",(0,i.jsx)(n.p,{children:"Emitted for every server message, including chats."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"jsonMsg"})," - ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-chat",children:"ChatMessage"})," object containing the formatted chat message. Might additionally have the following properties:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"unsigned - Unsigned ChatMessage object. Only present in 1.19.2+, and only when the server allows insecure chat and the server modified the chat message without the user's signature"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"position"})," - (>= 1.8.1): position of Chat message can be"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"chat"}),"\n",(0,i.jsx)(n.li,{children:"system"}),"\n",(0,i.jsx)(n.li,{children:"game_info"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"sender"})," - UUID of sender if known (1.16+), else null"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"verified"})," -> null if non signed, true if signed and correct, false if signed and incorrect"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"messagestr-message-messageposition-jsonmsg-sender-verified",children:'"messagestr" (message, messagePosition, jsonMsg, sender, verified)'}),"\n",(0,i.jsx)(n.p,{children:'Alias for the "message" event but it calls .toString() on the prismarine-message object to get a string for the message before emitting.'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"sender"})," - UUID of sender if known (1.16+), else null"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"verified"})," -> null if non signed, true if signed and correct, false if signed and incorrect"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"inject_allowed",children:'"inject_allowed"'}),"\n",(0,i.jsx)(n.p,{children:'Fires when the index file has been loaded, you can load mcData and plugins here but it\'s better to wait for "spawn" event.'}),"\n",(0,i.jsx)(n.h4,{id:"login",children:'"login"'}),"\n",(0,i.jsxs)(n.p,{children:["Fires after you successfully login to the server.\nYou probably want to wait for the ",(0,i.jsx)(n.code,{children:"spawn"})," event\nbefore doing anything though."]}),"\n",(0,i.jsx)(n.h4,{id:"spawn",children:'"spawn"'}),"\n",(0,i.jsx)(n.p,{children:"Emitted once after you log in and spawn for the first time\nand then emitted when you respawn after death."}),"\n",(0,i.jsx)(n.p,{children:"This is usually the event that you want to listen to\nbefore doing anything on the server."}),"\n",(0,i.jsx)(n.h4,{id:"respawn",children:'"respawn"'}),"\n",(0,i.jsx)(n.p,{children:'Emitted when you change dimensions and just before you spawn.\nUsually you want to ignore this event and wait until the "spawn"\nevent instead.'}),"\n",(0,i.jsx)(n.h4,{id:"game",children:'"game"'}),"\n",(0,i.jsx)(n.p,{children:"Emitted when the server changes any of the game properties."}),"\n",(0,i.jsx)(n.h4,{id:"resourcepack-url-hash",children:'"resourcePack" (url, hash)'}),"\n",(0,i.jsx)(n.p,{children:"Emitted when the server sends a resource pack."}),"\n",(0,i.jsx)(n.h4,{id:"title",children:'"title"'}),"\n",(0,i.jsx)(n.p,{children:"Emitted when the server sends a title"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"})," - title's text"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"rain",children:'"rain"'}),"\n",(0,i.jsx)(n.p,{children:"Emitted when it starts or stops raining. If you join a\nserver where it is already raining, this event will fire."}),"\n",(0,i.jsx)(n.h4,{id:"weatherupdate",children:'"weatherUpdate"'}),"\n",(0,i.jsxs)(n.p,{children:["Emitted when either ",(0,i.jsx)(n.code,{children:"bot.thunderState"})," or ",(0,i.jsx)(n.code,{children:"bot.rainState"})," changes.\nIf you join a server where it is already raining, this event will fire."]}),"\n",(0,i.jsx)(n.h4,{id:"time",children:'"time"'}),"\n",(0,i.jsxs)(n.p,{children:["Emitted when the server sends a time update. See ",(0,i.jsx)(n.code,{children:"bot.time"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"kicked-reason-loggedin",children:'"kicked" (reason, loggedIn)'}),"\n",(0,i.jsxs)(n.p,{children:["Emitted when the bot is kicked from the server. ",(0,i.jsx)(n.code,{children:"reason"}),"\nis a chat message explaining why you were kicked. ",(0,i.jsx)(n.code,{children:"loggedIn"}),"\nis ",(0,i.jsx)(n.code,{children:"true"})," if the client was kicked after successfully logging in,\nor ",(0,i.jsx)(n.code,{children:"false"})," if the kick occurred in the login phase."]}),"\n",(0,i.jsx)(n.h4,{id:"end-reason",children:'"end" (reason)'}),"\n",(0,i.jsxs)(n.p,{children:["Emitted when you are no longer connected to the server.\n",(0,i.jsx)(n.code,{children:"reason"})," is a string explaining why the client was disconnected. (defaults to 'socketClosed')"]}),"\n",(0,i.jsx)(n.h4,{id:"error-err",children:'"error" (err)'}),"\n",(0,i.jsx)(n.p,{children:"Emitted when an error occurs."}),"\n",(0,i.jsx)(n.h4,{id:"spawnreset",children:'"spawnReset"'}),"\n",(0,i.jsx)(n.p,{children:"Fires when you cannot spawn in your bed and your spawn point gets reset."}),"\n",(0,i.jsx)(n.h4,{id:"death",children:'"death"'}),"\n",(0,i.jsx)(n.p,{children:"Fires when you die."}),"\n",(0,i.jsx)(n.h4,{id:"health",children:'"health"'}),"\n",(0,i.jsx)(n.p,{children:"Fires when your hp or food change."}),"\n",(0,i.jsx)(n.h4,{id:"breath",children:'"breath"'}),"\n",(0,i.jsx)(n.p,{children:"Fires when your oxygen level change."}),"\n",(0,i.jsx)(n.h4,{id:"entityattributes-entity",children:'"entityAttributes" (entity)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when an attribute of an entity changes."}),"\n",(0,i.jsx)(n.h4,{id:"entityswingarm-entity",children:'"entitySwingArm" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entityhurt-entity",children:'"entityHurt" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entitydead-entity",children:'"entityDead" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entitytaming-entity",children:'"entityTaming" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entitytamed-entity",children:'"entityTamed" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entityshakingoffwater-entity",children:'"entityShakingOffWater" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entityeatinggrass-entity",children:'"entityEatingGrass" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entityhandswap-entity",children:'"entityHandSwap" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entitywake-entity",children:'"entityWake" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entityeat-entity",children:'"entityEat" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entitycriticaleffect-entity",children:'"entityCriticalEffect" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entitymagiccriticaleffect-entity",children:'"entityMagicCriticalEffect" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entitycrouch-entity",children:'"entityCrouch" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entityuncrouch-entity",children:'"entityUncrouch" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entityequip-entity",children:'"entityEquip" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entitysleep-entity",children:'"entitySleep" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entityspawn-entity",children:'"entitySpawn" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entityelytraflew-entity",children:'"entityElytraFlew" (entity)'}),"\n",(0,i.jsx)(n.p,{children:"An entity started elytra flying."}),"\n",(0,i.jsx)(n.h4,{id:"itemdrop-entity",children:'"itemDrop" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"playercollect-collector-collected",children:'"playerCollect" (collector, collected)'}),"\n",(0,i.jsx)(n.p,{children:"An entity picked up an item."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"collector"})," - entity that picked up the item."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"collected"})," - the entity that was the item on the ground."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"entitygone-entity",children:'"entityGone" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entitymoved-entity",children:'"entityMoved" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entitydetach-entity-vehicle",children:'"entityDetach" (entity, vehicle)'}),"\n",(0,i.jsx)(n.h4,{id:"entityattach-entity-vehicle",children:'"entityAttach" (entity, vehicle)'}),"\n",(0,i.jsx)(n.p,{children:"An entity is attached to a vehicle, such as a mine cart\nor boat."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entity"})," - the entity hitching a ride"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"vehicle"})," - the entity that is the vehicle"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"entityupdate-entity",children:'"entityUpdate" (entity)'}),"\n",(0,i.jsx)(n.h4,{id:"entityeffect-entity-effect",children:'"entityEffect" (entity, effect)'}),"\n",(0,i.jsx)(n.h4,{id:"entityeffectend-entity-effect",children:'"entityEffectEnd" (entity, effect)'}),"\n",(0,i.jsx)(n.h4,{id:"playerjoined-player",children:'"playerJoined" (player)'}),"\n",(0,i.jsx)(n.h4,{id:"playerupdated-player",children:'"playerUpdated" (player)'}),"\n",(0,i.jsx)(n.h4,{id:"playerleft-player",children:'"playerLeft" (player)'}),"\n",(0,i.jsx)(n.h4,{id:"blockupdate-oldblock-newblock",children:'"blockUpdate" (oldBlock, newBlock)'}),"\n",(0,i.jsxs)(n.p,{children:["(It is better to use this event from bot.world instead of bot directly) Fires when a block updates. Both ",(0,i.jsx)(n.code,{children:"oldBlock"})," and ",(0,i.jsx)(n.code,{children:"newBlock"})," provided for\ncomparison."]}),"\n",(0,i.jsxs)(n.p,{children:["Note that ",(0,i.jsx)(n.code,{children:"oldBlock"})," may be ",(0,i.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"blockupdatex-y-z-oldblock-newblock",children:'"blockUpdate:(x, y, z)" (oldBlock, newBlock)'}),"\n",(0,i.jsxs)(n.p,{children:["(It is better to use this event from bot.world instead of bot directly) Fires for a specific point. Both ",(0,i.jsx)(n.code,{children:"oldBlock"})," and ",(0,i.jsx)(n.code,{children:"newBlock"})," provided for\ncomparison."]}),"\n",(0,i.jsxs)(n.p,{children:["Note that ",(0,i.jsx)(n.code,{children:"oldBlock"})," may be ",(0,i.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"blockplaced-oldblock-newblock",children:'"blockPlaced" (oldBlock, newBlock)'}),"\n",(0,i.jsxs)(n.p,{children:["Fires when bot places block. Both ",(0,i.jsx)(n.code,{children:"oldBlock"})," and ",(0,i.jsx)(n.code,{children:"newBlock"})," provided for\ncomparison."]}),"\n",(0,i.jsxs)(n.p,{children:["Note that ",(0,i.jsx)(n.code,{children:"oldBlock"})," may be ",(0,i.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"chunkcolumnload-point",children:'"chunkColumnLoad" (point)'}),"\n",(0,i.jsx)(n.h4,{id:"chunkcolumnunload-point",children:'"chunkColumnUnload" (point)'}),"\n",(0,i.jsxs)(n.p,{children:["Fires when a chunk has updated. ",(0,i.jsx)(n.code,{children:"point"})," is the coordinates to the corner\nof the chunk with the smallest x, y, and z values."]}),"\n",(0,i.jsx)(n.h4,{id:"soundeffectheard-soundname-position-volume-pitch",children:'"soundEffectHeard" (soundName, position, volume, pitch)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when the client hears a named sound effect."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"soundName"}),": name of the sound effect"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"position"}),": a Vec3 instance where the sound originates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"volume"}),": floating point volume, 1.0 is 100%"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pitch"}),": integer pitch, 63 is 100%"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"hardcodedsoundeffectheard-soundid-soundcategory-position-volume-pitch",children:'"hardcodedSoundEffectHeard" (soundId, soundCategory, position, volume, pitch)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when the client hears a hardcoded sound effect."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"soundId"}),": id of the sound effect"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"soundCategory"}),": category of the sound effect"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"position"}),": a Vec3 instance where the sound originates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"volume"}),": floating point volume, 1.0 is 100%"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pitch"}),": integer pitch, 63 is 100%"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"noteheard-block-instrument-pitch",children:'"noteHeard" (block, instrument, pitch)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when a note block goes off somewhere."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block"}),": a Block instance, the block that emitted the noise"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"instrument"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"}),": integer id"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"}),": one of [",(0,i.jsx)(n.code,{children:"harp"}),", ",(0,i.jsx)(n.code,{children:"doubleBass"}),", ",(0,i.jsx)(n.code,{children:"snareDrum"}),", ",(0,i.jsx)(n.code,{children:"sticks"}),", ",(0,i.jsx)(n.code,{children:"bassDrum"}),"]."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pitch"}),": The pitch of the note (between 0-24 inclusive where 0 is the\nlowest and 24 is the highest). More information about how the pitch values\ncorrespond to notes in real life are available on the\n",(0,i.jsx)(n.a,{href:"http://minecraft.wiki/w/Note_Block",children:"official Minecraft wiki"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pistonmove-block-ispulling-direction",children:'"pistonMove" (block, isPulling, direction)'}),"\n",(0,i.jsx)(n.h4,{id:"chestlidmove-block-isopen-block2",children:'"chestLidMove" (block, isOpen, block2)'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block"}),": a Block instance, the block whose lid opened. The right block if it's a double chest"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"isOpen"}),": number of players that have the chest open. 0 if it's closed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block2"}),": a Block instance, the other half of the block whose lid opened. null if it's not a double chest"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"blockbreakprogressobserved-block-destroystage-entity",children:'"blockBreakProgressObserved" (block, destroyStage, entity)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when the client observes a block in the process of being broken."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block"}),": a Block instance, the block being broken"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"destroyStage"}),": integer corresponding to the destroy progress (0-9)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entity"}),": the entity which is breaking the block."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"blockbreakprogressend-block-entity",children:'"blockBreakProgressEnd" (block, entity)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when the client observes a block stops being broken.\nThis occurs whether the process was completed or aborted."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block"}),": a Block instance, the block no longer being broken"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entity"}),": the entity which has stopped breaking the block"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"diggingcompleted-block",children:'"diggingCompleted" (block)'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block"})," - the block that no longer exists"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"diggingaborted-block",children:'"diggingAborted" (block)'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block"})," - the block that still exists"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"usedfirework-fireworkentityid",children:'"usedFirework" (fireworkEntityId)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when the bot uses a firework while elytra flying."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fireworkEntityId"})," - the entity id of the firework."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"move",children:'"move"'}),"\n",(0,i.jsxs)(n.p,{children:["Fires when the bot moves. If you want the current position, use\n",(0,i.jsx)(n.code,{children:"bot.entity.position"})," and for normal moves if you want the previous position, use\n",(0,i.jsx)(n.code,{children:"bot.entity.position.minus(bot.entity.velocity)"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"forcedmove",children:'"forcedMove"'}),"\n",(0,i.jsxs)(n.p,{children:["Fires when the bot is force moved by the server (teleport, spawning, ...). If you want the current position, use\n",(0,i.jsx)(n.code,{children:"bot.entity.position"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"mount",children:'"mount"'}),"\n",(0,i.jsxs)(n.p,{children:["Fires when you mount an entity such as a minecart. To get access\nto the entity, use ",(0,i.jsx)(n.code,{children:"bot.vehicle"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["To mount an entity, use ",(0,i.jsx)(n.code,{children:"mount"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"dismount-vehicle",children:'"dismount" (vehicle)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when you dismount from an entity."}),"\n",(0,i.jsx)(n.h4,{id:"windowopen-window",children:'"windowOpen" (window)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when you begin using a workbench, chest, brewing stand, etc."}),"\n",(0,i.jsx)(n.h4,{id:"windowclose-window",children:'"windowClose" (window)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when you may no longer work with a workbench, chest, etc."}),"\n",(0,i.jsx)(n.h4,{id:"sleep",children:'"sleep"'}),"\n",(0,i.jsx)(n.p,{children:"Fires when you sleep."}),"\n",(0,i.jsx)(n.h4,{id:"wake",children:'"wake"'}),"\n",(0,i.jsx)(n.p,{children:"Fires when you wake up."}),"\n",(0,i.jsx)(n.h4,{id:"experience",children:'"experience"'}),"\n",(0,i.jsxs)(n.p,{children:["Fires when ",(0,i.jsx)(n.code,{children:"bot.experience.*"})," has updated."]}),"\n",(0,i.jsx)(n.h4,{id:"scoreboardcreated-scoreboard",children:'"scoreboardCreated" (scoreboard)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when a scoreboard is added."}),"\n",(0,i.jsx)(n.h4,{id:"scoreboarddeleted-scoreboard",children:'"scoreboardDeleted" (scoreboard)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when a scoreboard is deleted."}),"\n",(0,i.jsx)(n.h4,{id:"scoreboardtitlechanged-scoreboard",children:'"scoreboardTitleChanged" (scoreboard)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when a scoreboard's title is updated."}),"\n",(0,i.jsx)(n.h4,{id:"scoreupdated-scoreboard-item",children:'"scoreUpdated" (scoreboard, item)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when the score of a item in a scoreboard is updated."}),"\n",(0,i.jsx)(n.h4,{id:"scoreremoved-scoreboard-item",children:'"scoreRemoved" (scoreboard, item)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when the score of a item in a scoreboard is removed."}),"\n",(0,i.jsx)(n.h4,{id:"scoreboardposition-position-scoreboard",children:'"scoreboardPosition" (position, scoreboard)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when the position of a scoreboard is updated."}),"\n",(0,i.jsx)(n.h4,{id:"teamcreated-team",children:'"teamCreated" (team)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when a team is added."}),"\n",(0,i.jsx)(n.h4,{id:"teamremoved-team",children:'"teamRemoved" (team)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when a team is removed."}),"\n",(0,i.jsx)(n.h4,{id:"teamupdated-team",children:'"teamUpdated" (team)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when a team is updated."}),"\n",(0,i.jsx)(n.h4,{id:"teammemberadded-team",children:'"teamMemberAdded" (team)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when a team member or multiple members are added to a team."}),"\n",(0,i.jsx)(n.h4,{id:"teammemberremoved-team",children:'"teamMemberRemoved" (team)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when a team member or multiple members are removed from a team."}),"\n",(0,i.jsx)(n.h4,{id:"bossbarcreated-bossbar",children:'"bossBarCreated" (bossBar)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when new boss bar is created."}),"\n",(0,i.jsx)(n.h4,{id:"bossbardeleted-bossbar",children:'"bossBarDeleted" (bossBar)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when new boss bar is deleted."}),"\n",(0,i.jsx)(n.h4,{id:"bossbarupdated-bossbar",children:'"bossBarUpdated" (bossBar)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when new boss bar is updated."}),"\n",(0,i.jsx)(n.h4,{id:"helditemchanged-helditem",children:'"heldItemChanged" (heldItem)'}),"\n",(0,i.jsx)(n.p,{children:"Fires when the held item is changed."}),"\n",(0,i.jsx)(n.h4,{id:"physicstick-",children:'"physicsTick" ()'}),"\n",(0,i.jsx)(n.p,{children:"Fires every tick if bot.physicsEnabled is set to true."}),"\n",(0,i.jsxs)(n.h4,{id:"chat-matches",children:['"chat',":name",'" (matches)']}),"\n",(0,i.jsx)(n.p,{children:"Fires when the all of a chat pattern's regexs have matches"}),"\n",(0,i.jsx)(n.h4,{id:"particle",children:'"particle"'}),"\n",(0,i.jsx)(n.p,{children:"Fires when a particle is created"}),"\n",(0,i.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,i.jsx)(n.h4,{id:"botblockatpoint-extrainfostrue",children:"bot.blockAt(point, extraInfos=true)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns the block at ",(0,i.jsx)(n.code,{children:"point"})," or ",(0,i.jsx)(n.code,{children:"null"})," if that point is not loaded. If ",(0,i.jsx)(n.code,{children:"extraInfos"})," set to true, also returns informations about signs, paintings and block entities (slower).\nSee ",(0,i.jsx)(n.code,{children:"Block"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botwaitforchunkstoload",children:"bot.waitForChunksToLoad()"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when many chunks have loaded."]}),"\n",(0,i.jsx)(n.h4,{id:"botblockinsightmaxsteps-vectorlength",children:"bot.blockInSight(maxSteps, vectorLength)"}),"\n",(0,i.jsxs)(n.p,{children:["Deprecated, use ",(0,i.jsx)(n.code,{children:"blockAtCursor"})," instead."]}),"\n",(0,i.jsxs)(n.p,{children:["Returns the block at which bot is looking at or ",(0,i.jsx)(n.code,{children:"null"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"maxSteps"})," - Number of steps to raytrace, defaults to 256."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"vectorLength"})," - Length of raytracing vector, defaults to ",(0,i.jsx)(n.code,{children:"5/16"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botblockatcursormaxdistance256",children:"bot.blockAtCursor(maxDistance=256)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns the block at which bot is looking at or ",(0,i.jsx)(n.code,{children:"null"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"maxDistance"})," - The maximum distance the block can be from the eye, defaults to 256."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botentityatcursormaxdistance35",children:"bot.entityAtCursor(maxDistance=3.5)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns the entity at which bot is looking at or ",(0,i.jsx)(n.code,{children:"null"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"maxDistance"})," - The maximum distance the entity can be from the eye, defaults to 3.5."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botblockatentitycursorentitybotentity-maxdistance256",children:"bot.blockAtEntityCursor(entity=bot.entity, maxDistance=256)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns the block at which specific entity is looking at or ",(0,i.jsx)(n.code,{children:"null"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entity"})," - Entity data as ",(0,i.jsx)(n.code,{children:"Object"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"maxDistance"})," - The maximum distance the block can be from the eye, defaults to 256."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botcanseeblockblock",children:"bot.canSeeBlock(block)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns true or false depending on whether the bot can see the specified ",(0,i.jsx)(n.code,{children:"block"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botfindblocksoptions",children:"bot.findBlocks(options)"}),"\n",(0,i.jsx)(n.p,{children:"Finds the closest blocks from the given point."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"options"})," - Options for the search:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"point"})," - The start position of the search (center). Default is the bot position."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"matching"})," - A function that returns true if the given block is a match. Also supports this value being a block id or array of block ids."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"useExtraInfo"})," - To preserve backward compatibility can result in two behavior depending on the type","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"boolean"})," - Provide your ",(0,i.jsx)(n.code,{children:"matching"})," function more data - noticeably slower aproach"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"function"})," - Creates two stage maching, if block passes ",(0,i.jsx)(n.code,{children:"matching"})," function it is passed further to ",(0,i.jsx)(n.code,{children:"useExtraInfo"})," with additional info"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"maxDistance"})," - The furthest distance for the search, defaults to 16."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"count"})," - Number of blocks to find before returning the search. Default to 1. Can return less if not enough blocks are found exploring the whole area."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Returns an array (possibly empty) with the found block coordinates (not the blocks). The array is sorted (closest first)"}),"\n",(0,i.jsx)(n.h4,{id:"botfindblockoptions",children:"bot.findBlock(options)"}),"\n",(0,i.jsxs)(n.p,{children:["Alias for ",(0,i.jsx)(n.code,{children:"bot.blockAt(bot.findBlocks(options)[0])"}),". Return a single block or ",(0,i.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botcandigblockblock",children:"bot.canDigBlock(block)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns whether ",(0,i.jsx)(n.code,{children:"block"})," is diggable and within range."]}),"\n",(0,i.jsx)(n.h4,{id:"botrecipesforitemtype-metadata-minresultcount-craftingtable",children:"bot.recipesFor(itemType, metadata, minResultCount, craftingTable)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a list of ",(0,i.jsx)(n.code,{children:"Recipe"})," instances that you could use to craft ",(0,i.jsx)(n.code,{children:"itemType"}),"\nwith ",(0,i.jsx)(n.code,{children:"metadata"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"itemType"})," - numerical item id of the thing you want to craft"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"metadata"})," - the numerical metadata value of the item you want to craft\n",(0,i.jsx)(n.code,{children:"null"})," matches any metadata."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"minResultCount"})," - based on your current inventory, any recipe from the\nreturned list will be able to produce this many items. ",(0,i.jsx)(n.code,{children:"null"})," is an\nalias for ",(0,i.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"craftingTable"})," - a ",(0,i.jsx)(n.code,{children:"Block"})," instance. If ",(0,i.jsx)(n.code,{children:"null"}),", only recipes that can\nbe performed in your inventory window will be included in the list."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botrecipesallitemtype-metadata-craftingtable",children:"bot.recipesAll(itemType, metadata, craftingTable)"}),"\n",(0,i.jsx)(n.p,{children:"The same as bot.recipesFor except that it does not check wether the bot has enough materials for the recipe."}),"\n",(0,i.jsx)(n.h4,{id:"botnearestentityfilter",children:"bot.nearestEntity(filter)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-JS",children:"filter = (entity) => { return true }\n"})}),"\n",(0,i.jsx)(n.p,{children:"Return the nearest entity to the bot, matching the function (default to all entities). Return null if no entity is found."}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const cow = bot.nearestEntity(entity => entity.name.toLowerCase() === 'cow') // we use .toLowercase() because in 1.8 cow was capitalized, for newer versions that can be ommitted\n"})}),"\n",(0,i.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h4,{id:"botendreason",children:"bot.end(reason)"}),"\n",(0,i.jsx)(n.p,{children:"End the connection with the server."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"reason"})," - Optional string that states the reason of the end."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botquitreason",children:"bot.quit(reason)"}),"\n",(0,i.jsx)(n.p,{children:"Gracefully disconnect from the server with the given reason (defaults to 'disconnect.quitting')."}),"\n",(0,i.jsx)(n.h4,{id:"bottabcompletestr-assumecommand-sendblockinsight-timeout",children:"bot.tabComplete(str, [assumeCommand], [sendBlockInSight], [timeout])"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"matches"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.p,{children:"Requests chat completion from the server."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"str"})," - String to complete."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"assumeCommand"})," - Field sent to server, defaults to false."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sendBlockInSight"})," - Field sent to server, defaults to true. Set this option to false if you want more performance."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"timeout"})," - Timeout in milliseconds, after which the function will return an ampty array, defaults to 5000."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botchatmessage",children:"bot.chat(message)"}),"\n",(0,i.jsx)(n.p,{children:"Sends a publicly broadcast chat message. Breaks up big messages into multiple chat messages as necessary."}),"\n",(0,i.jsx)(n.h4,{id:"botwhisperusername-message",children:"bot.whisper(username, message)"}),"\n",(0,i.jsxs)(n.p,{children:["Shortcut for ",(0,i.jsx)(n.code,{children:'"/tell <username>"'}),". All split messages will be whispered to username."]}),"\n",(0,i.jsx)(n.h4,{id:"botchataddpatternpattern-chattype-description",children:"bot.chatAddPattern(pattern, chatType, description)"}),"\n",(0,i.jsxs)(n.p,{children:["Deprecated, use ",(0,i.jsx)(n.code,{children:"addChatPattern"})," instead."]}),"\n",(0,i.jsx)(n.p,{children:"Adds a regex pattern to the bot's chat matching. Useful for bukkit servers where the chat format changes a lot."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pattern"})," - regular expression to match chat"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chatType"}),' - the event the bot emits when the pattern matches. Eg: "chat" or "whisper"']}),"\n",(0,i.jsx)(n.li,{children:"'description ' - Optional, describes what the pattern is for"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botaddchatpatternname-pattern-chatpatternoptions",children:"bot.addChatPattern(name, pattern, chatPatternOptions)"}),"\n",(0,i.jsxs)(n.p,{children:["** this is an alias of ",(0,i.jsx)(n.code,{children:"bot.addChatPatternSet(name, [pattern], chatPatternOptions)"})]}),"\n",(0,i.jsxs)(n.p,{children:["make an event that is called every time the pattern is matched to a message,\nthe event will be called ",(0,i.jsx)(n.code,{children:'"chat:name"'}),", with name being the name passed"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," - the name used to listen for the event"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pattern"})," - regular expression to match to messages recieved"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chatPatternOptions"})," - object","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"repeat"})," - defaults to true, whether to listen for this event after the first match"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"parse"})," - instead of returning the actual message that was matched, return the capture groups from the regex"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"deprecated"})," - (",(0,i.jsx)(n.strong,{children:"unstable"}),") used by bot.chatAddPattern to keep compatability, likely to be removed"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"returns a number which can be used with bot.removeChatPattern() to only delete this pattern"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\ud83d\udc40"," cf. ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/mineflayer/blob/master/examples/chat_parsing.js#L17-L36",children:"examples/chat_parsing"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botaddchatpatternsetname-patterns-chatpatternoptions",children:"bot.addChatPatternSet(name, patterns, chatPatternOptions)"}),"\n",(0,i.jsxs)(n.p,{children:["make an event that is called every time all patterns havee been matched to messages,\nthe event will be called ",(0,i.jsx)(n.code,{children:'"chat:name"'}),", with name being the name passed"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," - the name used to listen for the event"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"patterns"})," - array of regular expression to match to messages recieved"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chatPatternOptions"})," - object","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"repeat"})," - defaults to true, whether to listen for this event after the first match"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"parse"})," - instead of returning the actual message that was matched, return the capture groups from the regex"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"returns a number which can be used with bot.removeChatPattern() to only delete this patternset"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\ud83d\udc40"," cf. ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/mineflayer/blob/master/examples/chat_parsing.js#L17-L36",children:"examples/chat_parsing"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botremovechatpatternname",children:"bot.removeChatPattern(name)"}),"\n",(0,i.jsx)(n.p,{children:"removes a chat pattern(s)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," : string or number"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"if name is a string, all patterns that have that name will be removed\nelse if name is a number, only that exact pattern will be removed"}),"\n",(0,i.jsx)(n.h4,{id:"botawaitmessageargs",children:"bot.awaitMessage(...args)"}),"\n",(0,i.jsx)(n.p,{children:"promise that is resolved when one of the messages passed as an arg is resolved"}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"async function wait () {\n  await bot.awaitMessage('<flatbot> hello world') // resolves on \"hello world\" in chat by flatbot\n  await bot.awaitMessage(['<flatbot> hello', '<flatbot> world']) // resolves on \"hello\" or \"world\" in chat by flatbot\n  await bot.awaitMessage(['<flatbot> hello', '<flatbot> world'], ['<flatbot> im', '<flatbot> batman']) // resolves on \"hello\" or \"world\" or \"im\" or \"batman\" in chat by flatbot\n  await bot.awaitMessage('<flatbot> hello', '<flatbot> world') // resolves on \"hello\" or \"world\" in chat by flatbot\n  await bot.awaitMessage(/<flatbot> (.+)/) // resolves on first message matching the regex\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"botsetsettingsoptions",children:"bot.setSettings(options)"}),"\n",(0,i.jsxs)(n.p,{children:["See the ",(0,i.jsx)(n.code,{children:"bot.settings"})," property."]}),"\n",(0,i.jsx)(n.h4,{id:"botloadpluginplugin",children:"bot.loadPlugin(plugin)"}),"\n",(0,i.jsx)(n.p,{children:"Injects a Plugin. Does nothing if the plugin is already loaded."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"plugin"})," - function"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"function somePlugin (bot, options) {\n  function someFunction () {\n    bot.chat('Yay!')\n  }\n\n  bot.myPlugin = {} // Good practice to namespace plugin API\n  bot.myPlugin.someFunction = someFunction\n}\n\nconst bot = mineflayer.createBot({})\nbot.loadPlugin(somePlugin)\nbot.once('login', function () {\n  bot.myPlugin.someFunction() // Yay!\n})\n"})}),"\n",(0,i.jsx)(n.h4,{id:"botloadpluginsplugins",children:"bot.loadPlugins(plugins)"}),"\n",(0,i.jsxs)(n.p,{children:["Injects plugins see ",(0,i.jsx)(n.code,{children:"bot.loadPlugin"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"plugins"})," - array of functions"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"bothaspluginplugin",children:"bot.hasPlugin(plugin)"}),"\n",(0,i.jsx)(n.p,{children:"Checks if the given plugin is loaded (or scheduled to be loaded) on this bot."}),"\n",(0,i.jsx)(n.h4,{id:"botsleepbedblock",children:"bot.sleep(bedBlock)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsxs)(n.p,{children:["Sleep in a bed. ",(0,i.jsx)(n.code,{children:"bedBlock"})," should be a ",(0,i.jsx)(n.code,{children:"Block"})," instance which is a bed."]}),"\n",(0,i.jsx)(n.h4,{id:"botisabedbedblock",children:"bot.isABed(bedBlock)"}),"\n",(0,i.jsxs)(n.p,{children:["Return true if ",(0,i.jsx)(n.code,{children:"bedBlock"})," is a bed"]}),"\n",(0,i.jsx)(n.h4,{id:"botwake",children:"bot.wake()"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.p,{children:"Get out of bed."}),"\n",(0,i.jsx)(n.h4,{id:"botsetcontrolstatecontrol-state",children:"bot.setControlState(control, state)"}),"\n",(0,i.jsx)(n.p,{children:"This is the main method controlling the bot movements. It works similarly to pressing keys in minecraft.\nFor example forward with state true will make the bot move forward. Forward with state false will make the bot stop moving forward.\nYou may use bot.lookAt in conjunction with this to control movement. The jumper.js example shows how to use this."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"control"})," - one of ['forward', 'back', 'left', 'right', 'jump', 'sprint', 'sneak']"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"state"})," - ",(0,i.jsx)(n.code,{children:"true"})," or ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botgetcontrolstatecontrol",children:"bot.getControlState(control)"}),"\n",(0,i.jsx)(n.p,{children:"Returns true if a control state is toggled."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"control"})," - one of ['forward', 'back', 'left', 'right', 'jump', 'sprint', 'sneak']"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botclearcontrolstates",children:"bot.clearControlStates()"}),"\n",(0,i.jsx)(n.p,{children:"Sets all controls to off."}),"\n",(0,i.jsx)(n.h4,{id:"botgetexplosiondamagesentity-position-radius-rawdamages",children:"bot.getExplosionDamages(entity, position, radius, [rawDamages])"}),"\n",(0,i.jsxs)(n.p,{children:["Returns how much damage will be done to the entity in a radius around the position of the explosion.\nIt will return ",(0,i.jsx)(n.code,{children:"null"})," if the entity has no armor and rawDamages is not set to true, since the function can't calculate the damage with armor if there is no armor."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entity"})," - Entity instance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"position"})," - ",(0,i.jsx)(n.a,{href:"https://github.com/andrewrk/node-vec3",children:"Vec3"})," instance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"radius"})," - the explosion radius as a number"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rawDamages"})," - optional, if true it ignores armor in the calculation"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botlookatpoint-force",children:"bot.lookAt(point, [force])"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when you are looking at ",(0,i.jsx)(n.code,{children:"point"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"point"})," ",(0,i.jsx)(n.a,{href:"https://github.com/andrewrk/node-vec3",children:"Vec3"})," instance - tilts your head so that it is directly facing this point."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"force"})," - See ",(0,i.jsx)(n.code,{children:"force"})," in ",(0,i.jsx)(n.code,{children:"bot.look"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botlookyaw-pitch-force",children:"bot.look(yaw, pitch, [force])"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument called when you are looking at ",(0,i.jsx)(n.code,{children:"yaw"})," and ",(0,i.jsx)(n.code,{children:"pitch"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Set the direction your head is facing."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"yaw"})," - The number of radians to rotate around the vertical axis, starting\nfrom due east. Counter clockwise."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pitch"})," - Number of radians to point up or down. 0 means straight forward.\npi / 2 means straight up. -pi / 2 means straight down."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"force"})," - If present and true, skips the smooth server-side transition.\nSpecify this to true if you need the server to know exactly where you\nare looking, such as for dropping items or shooting arrows. This is not\nneeded for client-side calculation such as walking direction."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botupdatesignblock-text-back--false",children:"bot.updateSign(block, text, back = false)"}),"\n",(0,i.jsxs)(n.p,{children:["Changes the text on the sign. On Minecraft 1.20 and newer, a truthy ",(0,i.jsx)(n.code,{children:"back"})," will try setting the text on the back of a sign (only visible if not attached to a wall)."]}),"\n",(0,i.jsx)(n.h4,{id:"botequipitem-destination",children:"bot.equip(item, destination)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when you have successfully equipped the item or when you learn that you have failed to equip the item."]}),"\n",(0,i.jsxs)(n.p,{children:["Equips an item from your inventory. If the argument ",(0,i.jsx)(n.code,{children:"item"})," is of Instance ",(0,i.jsx)(n.code,{children:"Item"})," equip will equip this specific item from its window slot. If the argument ",(0,i.jsx)(n.code,{children:"item"})," is of type ",(0,i.jsx)(n.code,{children:"number"})," equip will equip the first item found with that id searched by rising slot id (Hotbar is searched last. Armor, crafting, crafting result and off-hand slots are excluded)."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"item"})," - ",(0,i.jsx)(n.code,{children:"Item"})," instance or ",(0,i.jsx)(n.code,{children:"number"})," for item id. See ",(0,i.jsx)(n.code,{children:"window.items()"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"destination"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"hand"'})," - ",(0,i.jsx)(n.code,{children:"null"})," aliases to this"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:'"head"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:'"torso"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:'"legs"'})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:'"feet"'})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"off-hand"'})," - when available"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botunequipdestination",children:"bot.unequip(destination)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.p,{children:"Remove an article of equipment."}),"\n",(0,i.jsx)(n.h4,{id:"bottossstackitem",children:"bot.tossStack(item)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when tossing is done."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"item"})," - the stack of items you wish to toss\ntruthy, you were not able to complete the toss."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"bottossitemtype-metadata-count",children:"bot.toss(itemType, metadata, count)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument once tossing is complete."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"itemType"})," - numerical id of the item you wish to toss"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"metadata"})," - metadata of the item you wish to toss. Use ",(0,i.jsx)(n.code,{children:"null"}),"\nto match any metadata"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"count"})," - how many you want to toss. ",(0,i.jsx)(n.code,{children:"null"})," is an alias for ",(0,i.jsx)(n.code,{children:"1"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botelytrafly",children:"bot.elytraFly()"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument once activating\nelytra flight is complete. It will throw an Error if it fails."]}),"\n",(0,i.jsx)(n.h4,{id:"botdigblock-forcelook--true-digface",children:"bot.dig(block, [forceLook = true], [digFace])"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when the block is broken or you are interrupted."]}),"\n",(0,i.jsxs)(n.p,{children:["Begin digging into ",(0,i.jsx)(n.code,{children:"block"}),' with the currently equipped item.\nSee also "diggingCompleted" and "diggingAborted" events.']}),"\n",(0,i.jsxs)(n.p,{children:["Note that once you begin digging into a block, you may not\ndig any other blocks until the block has been broken, or you call\n",(0,i.jsx)(n.code,{children:"bot.stopDigging()"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block"})," - the block to start digging into"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"forceLook"})," - (optional) if true, look at the block and start mining instantly. If false, the bot will slowly turn to the block to mine. Additionally, this can be assigned to 'ignore' to prevent the bot from moving it's head at all. Also, this can be assigned to 'raycast' to raycast from the bots head to place where the bot is looking."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"digFace"})," - (optional) Default is 'auto' looks at the center of the block and mines the top face. Can also be a vec3 vector\nof the face the bot should be looking at when digging the block. For example: ",(0,i.jsx)(n.code,{children:"vec3(0, 1, 0)"})," when mining the top. Can also be 'raycast' raycast checks if there is a face visible by the bot and mines that face. Useful for servers with anti cheat."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If you call bot.dig twice before the first dig is finished, you will get a fatal 'diggingAborted' error."}),"\n",(0,i.jsx)(n.h4,{id:"botstopdigging",children:"bot.stopDigging()"}),"\n",(0,i.jsx)(n.h4,{id:"botdigtimeblock",children:"bot.digTime(block)"}),"\n",(0,i.jsx)(n.p,{children:"Tells you how long it will take to dig the block, in milliseconds."}),"\n",(0,i.jsx)(n.h4,{id:"botacceptresourcepack",children:"bot.acceptResourcePack()"}),"\n",(0,i.jsx)(n.p,{children:"Accepts resource pack."}),"\n",(0,i.jsx)(n.h4,{id:"botdenyresourcepack",children:"bot.denyResourcePack()"}),"\n",(0,i.jsx)(n.p,{children:"Denies resource pack."}),"\n",(0,i.jsx)(n.h4,{id:"botplaceblockreferenceblock-facevector",children:"bot.placeBlock(referenceBlock, faceVector)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when the server confirms that the block has indeed been placed."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"referenceBlock"})," - the block you want to place a new block next to"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"faceVector"})," - one of the six cardinal directions, such as ",(0,i.jsx)(n.code,{children:"new Vec3(0, 1, 0)"})," for the top face,\nindicating which face of the ",(0,i.jsx)(n.code,{children:"referenceBlock"})," to place the block against."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The new block will be placed at ",(0,i.jsx)(n.code,{children:"referenceBlock.position.plus(faceVector)"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botplaceentityreferenceblock-facevector",children:"bot.placeEntity(referenceBlock, faceVector)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"Entity"})," as its argument upon completion."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"referenceBlock"})," - the block you want to place the entity next to"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"faceVector"})," - one of the six cardinal directions, such as ",(0,i.jsx)(n.code,{children:"new Vec3(0, 1, 0)"})," for the top face,\nindicating which face of the ",(0,i.jsx)(n.code,{children:"referenceBlock"})," to place the block against."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The new block will be placed at ",(0,i.jsx)(n.code,{children:"referenceBlock.position.plus(faceVector)"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botactivateblockblock-direction-vec3-cursorpos-vec3",children:"bot.activateBlock(block, direction?: Vec3, cursorPos?: Vec3)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.p,{children:"Punch a note block, open a door, etc."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block"})," - the block to activate"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"direction"})," Optional defaults to ",(0,i.jsx)(n.code,{children:"new Vec3(0, 1, 0)"})," (up). A vector off the direction the container block should be interacted with. Does nothing when a container entity is targeted."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cursorPos"})," Optional defaults to ",(0,i.jsx)(n.code,{children:"new Vec3(0.5, 0.5, 0.5)"})," (block center). The curos position when opening the block instance. This is send with the activate block packet. Does nothing when a container entity is targeted."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botactivateentityentity",children:"bot.activateEntity(entity)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.p,{children:"Activate an entity, useful for villager for example."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entity"})," - the entity to activate"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botactivateentityatentity-position",children:"bot.activateEntityAt(entity, position)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.p,{children:"Activate an entity at the given position, useful for armor stands."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entity"})," - the entity to activate"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"position"})," - the world position to click at"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botconsume",children:"bot.consume()"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when consume ends."]}),"\n",(0,i.jsx)(n.p,{children:"Eat / drink currently held item"}),"\n",(0,i.jsx)(n.h4,{id:"botfish",children:"bot.fish()"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when fishing ends."]}),"\n",(0,i.jsx)(n.p,{children:"Use fishing rod"}),"\n",(0,i.jsx)(n.h4,{id:"botactivateitemoffhandfalse",children:"bot.activateItem(offHand=false)"}),"\n",(0,i.jsx)(n.p,{children:"Activates the currently held item. This is how you eat, shoot bows, throw an\negg, activate firework rockets, etc."}),"\n",(0,i.jsxs)(n.p,{children:["Optional parameter is ",(0,i.jsx)(n.code,{children:"false"})," for main hand and ",(0,i.jsx)(n.code,{children:"true"})," for off hand."]}),"\n",(0,i.jsx)(n.h4,{id:"botdeactivateitem",children:"bot.deactivateItem()"}),"\n",(0,i.jsx)(n.p,{children:"Deactivates the currently held item. This is how you release an arrow, stop eating, etc."}),"\n",(0,i.jsx)(n.h4,{id:"botuseontargetentity",children:"bot.useOn(targetEntity)"}),"\n",(0,i.jsxs)(n.p,{children:["Use the currently held item on an ",(0,i.jsx)(n.code,{children:"Entity"})," instance. This is how you apply a saddle and\nuse shears."]}),"\n",(0,i.jsx)(n.h4,{id:"botattackentity-swing--true",children:"bot.attack(entity, swing = true)"}),"\n",(0,i.jsx)(n.p,{children:"Attack a player or a mob."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entity"})," is a type of entity. To get a specific entity use ",(0,i.jsx)(n.a,{href:"#botnearestentitymatch--entity---return-true-",children:"bot.nearestEntity()"})," or ",(0,i.jsx)(n.a,{href:"#botentities",children:"bot.entities"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"swing"})," Default to ",(0,i.jsx)(n.code,{children:"true"}),". If false the bot does not swing its arm when attacking."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botswingarmhand-showhand",children:"bot.swingArm([hand], showHand)"}),"\n",(0,i.jsx)(n.p,{children:"Play an arm swing animation."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hand"})," can take ",(0,i.jsx)(n.code,{children:"left"})," or ",(0,i.jsx)(n.code,{children:"right"})," which is the arm that is animated. Default: ",(0,i.jsx)(n.code,{children:"right"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"showHand"})," is a boolean whether to add the hand to the packet, Default: ",(0,i.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botmountentity",children:"bot.mount(entity)"}),"\n",(0,i.jsxs)(n.p,{children:["Mount a vehicle. To get back out, use ",(0,i.jsx)(n.code,{children:"bot.dismount"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botdismount",children:"bot.dismount()"}),"\n",(0,i.jsx)(n.p,{children:"Dismounts from the vehicle you are in."}),"\n",(0,i.jsx)(n.h4,{id:"botmovevehicleleftforward",children:"bot.moveVehicle(left,forward)"}),"\n",(0,i.jsx)(n.p,{children:"Moves the vehicle :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"left can take -1 or 1 : -1 means right, 1 means left"}),"\n",(0,i.jsx)(n.li,{children:"forward can take -1 or 1 : -1 means backward, 1 means forward"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"All the direction are relative to where the bot is looking at"}),"\n",(0,i.jsx)(n.h4,{id:"botsetquickbarslotslot",children:"bot.setQuickBarSlot(slot)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"slot"})," - 0-8 the quick bar slot to select."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botcraftrecipe-count-craftingtable",children:"bot.craft(recipe, count, craftingTable)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when the crafting is complete and your inventory is updated."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"recipe"})," - A ",(0,i.jsx)(n.code,{children:"Recipe"})," instance. See ",(0,i.jsx)(n.code,{children:"bot.recipesFor"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"count"})," - How many times you wish to perform the operation.\nIf you want to craft planks into ",(0,i.jsx)(n.code,{children:"8"})," sticks, you would set\n",(0,i.jsx)(n.code,{children:"count"})," to ",(0,i.jsx)(n.code,{children:"2"}),". ",(0,i.jsx)(n.code,{children:"null"})," is an alias for ",(0,i.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"craftingTable"})," - A ",(0,i.jsx)(n.code,{children:"Block"})," instance, the crafting table you wish to\nuse. If the recipe does not require a crafting table, you may use\n",(0,i.jsx)(n.code,{children:"null"})," for this argument."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botwritebookslot-pages",children:"bot.writeBook(slot, pages)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when the writing was successfully or an error occurred."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"slot"})," is in inventory window coordinates (where 36 is the first quickbar slot, etc.)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pages"})," is an array of strings represents the pages."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botopencontainercontainerblock-or-containerentity-direction-cursorpos",children:"bot.openContainer(containerBlock or containerEntity, direction?, cursorPos?)"}),"\n",(0,i.jsx)(n.p,{children:"Opens a block container or entity."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"containerBlock"})," or ",(0,i.jsx)(n.code,{children:"containerEntity"})," The block instance to open or the entity to open."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"direction"})," Optional defaults to ",(0,i.jsx)(n.code,{children:"new Vec3(0, 1, 0)"})," (up). A vector off the direction the container block should be interacted with. Does nothing when a container entity is targeted."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cursorPos"})," Optional defaults to ",(0,i.jsx)(n.code,{children:"new Vec3(0.5, 0.5, 0.5)"})," (block center). The curos position when opening the block instance. This is send with the activate block packet. Does nothing when a container entity is targeted."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Returns a promise on a ",(0,i.jsx)(n.code,{children:"Container"})," instance which represents the container you are opening."]}),"\n",(0,i.jsx)(n.h4,{id:"botopenchestchestblock-or-minecartchestentity-direction-cursorpos",children:"bot.openChest(chestBlock or minecartchestEntity, direction?, cursorPos?)"}),"\n",(0,i.jsxs)(n.p,{children:["Deprecated. Same as ",(0,i.jsx)(n.code,{children:"openContainer"})]}),"\n",(0,i.jsx)(n.h4,{id:"botopenfurnacefurnaceblock",children:"bot.openFurnace(furnaceBlock)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a promise on a ",(0,i.jsx)(n.code,{children:"Furnace"})," instance which represents the furnace you are opening."]}),"\n",(0,i.jsx)(n.h4,{id:"botopendispenserdispenserblock",children:"bot.openDispenser(dispenserBlock)"}),"\n",(0,i.jsxs)(n.p,{children:["Deprecated. Same as ",(0,i.jsx)(n.code,{children:"openContainer"})]}),"\n",(0,i.jsx)(n.h4,{id:"botopenenchantmenttableenchantmenttableblock",children:"bot.openEnchantmentTable(enchantmentTableBlock)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a promise on an ",(0,i.jsx)(n.code,{children:"EnchantmentTable"})," instance which represents the enchantment table\nyou are opening."]}),"\n",(0,i.jsx)(n.h4,{id:"botopenanvilanvilblock",children:"bot.openAnvil(anvilBlock)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a promise on an ",(0,i.jsx)(n.code,{children:"anvil"})," instance which represents the anvil you are opening."]}),"\n",(0,i.jsx)(n.h4,{id:"botopenvillagervillagerentity",children:"bot.openVillager(villagerEntity)"}),"\n",(0,i.jsxs)(n.p,{children:["Returns a promise on a ",(0,i.jsx)(n.code,{children:"Villager"})," instance which represents the trading window you are opening.\nYou can listen to the ",(0,i.jsx)(n.code,{children:"ready"})," event on this ",(0,i.jsx)(n.code,{children:"Villager"})," to know when it's ready"]}),"\n",(0,i.jsx)(n.h4,{id:"bottradevillagerinstance-tradeindex-times",children:"bot.trade(villagerInstance, tradeIndex, [times])"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsxs)(n.p,{children:["Uses the open ",(0,i.jsx)(n.code,{children:"villagerInstance"})," to trade."]}),"\n",(0,i.jsx)(n.h4,{id:"botsetcommandblockpos-command-options",children:"bot.setCommandBlock(pos, command, [options])"}),"\n",(0,i.jsxs)(n.p,{children:["Set a command block's properties at ",(0,i.jsx)(n.code,{children:"pos"}),".\nExample ",(0,i.jsx)(n.code,{children:"options"})," argument:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"{\n  mode: 2,\n  trackOutput: true,\n  conditional: false,\n  alwaysActive: true\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"options.mode can have 3 values: 0 (SEQUENCE), 1 (AUTO), 2 (REDSTONE)\nAll options attributes are false by default, except mode which is 2 (as to replicate the default command block in Minecraft)."}),"\n",(0,i.jsx)(n.h4,{id:"botsupportfeaturename",children:"bot.supportFeature(name)"}),"\n",(0,i.jsx)(n.p,{children:"This can be used to check is a specific feature is available in the current Minecraft version. This is usually only required for handling version-specific functionality."}),"\n",(0,i.jsxs)(n.p,{children:["The list of available features can be found inside the ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/mineflayer/blob/master/lib/features.json",children:"./lib/features.json"})," file."]}),"\n",(0,i.jsx)(n.h4,{id:"botwaitforticksticks",children:"bot.waitForTicks(ticks)"}),"\n",(0,i.jsx)(n.p,{children:"This is a promise-based function that waits for a given number of in-game ticks to pass before continuing. This is useful for quick timers that need to function with specific timing, regardless of the given physics tick speed of the bot. This is similar to the standard Javascript setTimeout function, but runs on the physics timer of the bot specifically."}),"\n",(0,i.jsx)(n.h4,{id:"botrespawn",children:"bot.respawn()"}),"\n",(0,i.jsxs)(n.p,{children:["When ",(0,i.jsx)(n.code,{children:"respawn"})," option is disabled, you can call this method manually to respawn."]}),"\n",(0,i.jsx)(n.h3,{id:"lower-level-inventory-methods",children:"Lower level inventory methods"}),"\n",(0,i.jsx)(n.p,{children:"These are lower level methods for the inventory, they can be useful sometimes but prefer the inventory methods presented above if you can."}),"\n",(0,i.jsx)(n.h4,{id:"botclickwindowslot-mousebutton-mode",children:"bot.clickWindow(slot, mouseButton, mode)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsx)(n.p,{children:"The only valid mode option at the moment is 0. Shift clicking or mouse dragging is not implemented."}),"\n",(0,i.jsxs)(n.p,{children:["Click on the current window. See details at ",(0,i.jsx)(n.a,{href:"https://wiki.vg/Protocol#Click_Container",children:"https://wiki.vg/Protocol#Click_Container"})]}),"\n",(0,i.jsx)(n.p,{children:"Prefer using bot.simpleClick.*"}),"\n",(0,i.jsx)(n.h4,{id:"botputselecteditemrangestart-end-window-slot",children:"bot.putSelectedItemRange(start, end, window, slot)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsxs)(n.p,{children:["Put the item at ",(0,i.jsx)(n.code,{children:"slot"})," in the specified range."]}),"\n",(0,i.jsx)(n.h4,{id:"botputawayslot",children:"bot.putAway(slot)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsxs)(n.p,{children:["Put the item at ",(0,i.jsx)(n.code,{children:"slot"})," in the inventory."]}),"\n",(0,i.jsx)(n.h4,{id:"botclosewindowwindow",children:"bot.closeWindow(window)"}),"\n",(0,i.jsxs)(n.p,{children:["Close the ",(0,i.jsx)(n.code,{children:"window"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"bottransferoptions",children:"bot.transfer(options)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsxs)(n.p,{children:["Transfer some kind of item from one range to an other. ",(0,i.jsx)(n.code,{children:"options"})," is an object containing :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"window"})," : Optional. the window where the item will be moved"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"itemType"})," : the type of the moved items"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"metadata"})," : Optional. the metadata of the moved items"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sourceStart"})," and ",(0,i.jsx)(n.code,{children:"sourceEnd"})," : the source range. ",(0,i.jsx)(n.code,{children:"sourceEnd"})," is optional and will default to ",(0,i.jsx)(n.code,{children:"sourceStart"})," + 1"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"destStart"})," and ",(0,i.jsx)(n.code,{children:"destEnd"})," : the dest Range. ",(0,i.jsx)(n.code,{children:"destEnd"})," is optional and will default to ",(0,i.jsx)(n.code,{children:"destStart"})," + 1"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"count"})," : the amount of items to transfer. Default: ",(0,i.jsx)(n.code,{children:"1"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"nbt"})," : nbt data of the item to transfer. Default: ",(0,i.jsx)(n.code,{children:"nullish"})," (ignores nbt)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botopenblockblock-direction-vec3-cursorpos-vec3",children:"bot.openBlock(block, direction?: Vec3, cursorPos?: Vec3)"}),"\n",(0,i.jsxs)(n.p,{children:["Open a block, for example a chest, returns a promise on the opening ",(0,i.jsx)(n.code,{children:"Window"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"block"})," is the block the bot will open."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"direction"})," Optional defaults to ",(0,i.jsx)(n.code,{children:"new Vec3(0, 1, 0)"})," (up). A vector off the direction the container block should be interacted with. Does nothing when a container entity is targeted."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cursorPos"})," Optional defaults to ",(0,i.jsx)(n.code,{children:"new Vec3(0.5, 0.5, 0.5)"})," (block center). The curos position when opening the block instance. This is send with the activate block packet. Does nothing when a container entity is targeted."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botopenentityentity",children:"bot.openEntity(entity)"}),"\n",(0,i.jsxs)(n.p,{children:["Open an entity with an inventory, for example a villager, returns a promise on the opening ",(0,i.jsx)(n.code,{children:"Window"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"entity"})," is the entity the bot will open"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botmoveslotitemsourceslot-destslot",children:"bot.moveSlotItem(sourceSlot, destSlot)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument upon completion."]}),"\n",(0,i.jsxs)(n.p,{children:["Move an item from ",(0,i.jsx)(n.code,{children:"sourceSlot"})," to ",(0,i.jsx)(n.code,{children:"destSlot"})," in the current window."]}),"\n",(0,i.jsx)(n.h4,{id:"botupdatehelditem",children:"bot.updateHeldItem()"}),"\n",(0,i.jsxs)(n.p,{children:["Update ",(0,i.jsx)(n.code,{children:"bot.heldItem"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botgetequipmentdestslotdestination",children:"bot.getEquipmentDestSlot(destination)"}),"\n",(0,i.jsx)(n.p,{children:"Gets the inventory equipment slot id for the given equipment destination name."}),"\n",(0,i.jsx)(n.p,{children:"Available destinations are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"head"}),"\n",(0,i.jsx)(n.li,{children:"torso"}),"\n",(0,i.jsx)(n.li,{children:"legs"}),"\n",(0,i.jsx)(n.li,{children:"feet"}),"\n",(0,i.jsx)(n.li,{children:"hand"}),"\n",(0,i.jsx)(n.li,{children:"off-hand"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"botcreative",children:"bot.creative"}),"\n",(0,i.jsx)(n.p,{children:"This collection of apis is useful in creative mode.\nDetecting and changing gamemodes is not implemented here,\nbut it is assumed and often required that the bot be in creative mode for these features to work."}),"\n",(0,i.jsx)(n.h4,{id:"botcreativesetinventoryslotslot-item",children:"bot.creative.setInventorySlot(slot, item)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when gets fired when the server sets the slot."]}),"\n",(0,i.jsx)(n.p,{children:"Gives the bot the specified item in the specified inventory slot."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"slot"})," is in inventory window coordinates (where 36 is the first quickbar slot, etc.)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"item"})," is a ",(0,i.jsx)(n.a,{href:"https://github.com/PrismarineJS/prismarine-item",children:"prismarine-item"})," instance specified with arbitrary metadata, nbtdata, etc.\nIf ",(0,i.jsx)(n.code,{children:"item"})," is ",(0,i.jsx)(n.code,{children:"null"}),", the item at the specified slot is deleted."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If this method changes anything, you can be notified via ",(0,i.jsx)(n.code,{children:'bot.inventory.on("updateSlot")'}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botcreativeclearslotslot",children:"bot.creative.clearSlot(slot)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when gets fired when the server clears the slot."]}),"\n",(0,i.jsx)(n.p,{children:"Makes the sets the item in the slot given to null."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"slot"})," is in inventory window coordinates (where 36 is the first quickbar slot, etc.)."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"botcreativeclearinventory",children:"bot.creative.clearInventory()"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when gets fired when the server clears the slot."]}),"\n",(0,i.jsx)(n.h4,{id:"botcreativeflytodestination",children:"bot.creative.flyTo(destination)"}),"\n",(0,i.jsxs)(n.p,{children:["This function returns a ",(0,i.jsx)(n.code,{children:"Promise"}),", with ",(0,i.jsx)(n.code,{children:"void"})," as its argument when the bot arrives at the destination."]}),"\n",(0,i.jsxs)(n.p,{children:["Calls ",(0,i.jsx)(n.code,{children:"startFlying()"})," and moves at a constant speed through 3d space in a straight line to the destination.\n",(0,i.jsx)(n.code,{children:"destination"})," is a ",(0,i.jsx)(n.code,{children:"Vec3"}),", and often the ",(0,i.jsx)(n.code,{children:"x"})," and ",(0,i.jsx)(n.code,{children:"z"})," coordinates will end with ",(0,i.jsx)(n.code,{children:".5"}),".\nThis operation will not work if there is an obstacle in the way,\nso it is advised to fly very short distances at a time."]}),"\n",(0,i.jsx)(n.p,{children:"This method does not attempt any path finding.\nIt is expected that a path finding implementation will use this method to move < 2 blocks at a time."}),"\n",(0,i.jsxs)(n.p,{children:["To resume normal physics, call ",(0,i.jsx)(n.code,{children:"stopFlying()"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"botcreativestartflying",children:"bot.creative.startFlying()"}),"\n",(0,i.jsxs)(n.p,{children:["Sets ",(0,i.jsx)(n.code,{children:"bot.physics.gravity"})," to ",(0,i.jsx)(n.code,{children:"0"}),".\nTo resume normal physics, call ",(0,i.jsx)(n.code,{children:"stopFlying()"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This method is useful if you want to hover while digging the ground below you.\nIt is not necessary to call this function before calling ",(0,i.jsx)(n.code,{children:"flyTo()"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Note that while flying, ",(0,i.jsx)(n.code,{children:"bot.entity.velocity"})," will not be accurate."]}),"\n",(0,i.jsx)(n.h4,{id:"botcreativestopflying",children:"bot.creative.stopFlying()"}),"\n",(0,i.jsxs)(n.p,{children:["Restores ",(0,i.jsx)(n.code,{children:"bot.physics.gravity"})," to it's original value."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var i=t(7294);const s={},l=i.createContext(s);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);